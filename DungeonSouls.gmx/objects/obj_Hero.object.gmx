<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Barbarian_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_Hit</parentName>
  <maskName>spr_Barbarian_Mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stats
player = noone;
//char = choose(4,5,6,7,8);   
if (!global.coop) {
   char        = global.choice;//choose(0,1,2,3,4);
   player = 0;
} else {//Coop Mode
    //if (id == instance_find(obj_Hero,1) ) then
    if (instance_exists(obj_hero_corpse )) {
    if (obj_hero_corpse.alive = true) {
    if ( global.player_1 == true ) {
       char = global.choice; 
       player = 0;
    } else if (global.player_1 == false ) {
       char = global.choice2;  
       player = 1;
    }
    }
    }
    //if (id == instance_find(obj_Hero,0) ) then 
}


/*hspd = 0;
vspd = 0;*/
Char_Stats();
team        = 1
facing      = 1;
angle       = 0//point_direction(x,y,mouse_x,mouse_y);
moving      = false;
swing       = false;
scl         = 0;
randomize();

//char        = choose(1,2,3,4);
device = noone;
scr_get_input_player(player);
if char != 1 then wepang = choose(120,-120); else wepang = 0;
wepflip     = 1
angle       = 0
wkick       = 0
right       = 1
wepright    = 1
back        = 1;
invul       = 0;
status      = "";
status_cd   = 0;
atk_hold    = 0;
size        = 1;
charge      = 0;
can_move    = true;
dash        = 0;
knock       = 0;
on_blood    = false;
speedup     = false;
berserk     = false;
col         = c_aqua+c_white
sflash[0]   = 1;
sflash[1]   = 1;
sflash[2]   = 1;
image_speed = 0.4;
xx          = 0;
yy          = 0;
dir         = 0;
hs          = 0; 
vs          = 0;
//RANK
switch(rank_title[rank[char]])
{
    case "NEOPHYTE":
        hpmax[char]     += (0/100)*hpmax[char]
        atk_dam[char]   += (0/100)*atk_dam[char]
        defense[char]   += (0/100)*defense[char]
        mag_dam[char]   += (0/100)*mag_dam[char]
        mresist[char]   += (0/100)*mresist[char]  
        crit_chance     += 0;
        crit_dam        += 0;
        break;
    case "ESQUIRE":
        hpmax[char]     += (2/100)*hpmax[char]
        atk_dam[char]   += (2/100)*atk_dam[char]
        defense[char]   += (1/100)*defense[char]
        mag_dam[char]   += (2/100)*mag_dam[char]
        mresist[char]   += (1/100)*mresist[char]  
        crit_chance     += 0;
        crit_dam        += 0;    
        break;
    case "NOBLE":
        hpmax[char]     += (2/100)*hpmax[char]
        atk_dam[char]   += (4/100)*atk_dam[char]
        defense[char]   += (1/100)*defense[char]
        mag_dam[char]   += (4/100)*mag_dam[char]
        mresist[char]   += (1/100)*mresist[char]  
        crit_chance     += 1;
        crit_dam        += 1;    
        break;
    case "MASTER":
        hpmax[char]     += (5/100)*hpmax[char]
        atk_dam[char]   += (2/100)*atk_dam[char]
        defense[char]   += (2/100)*defense[char]
        mag_dam[char]   += (2/100)*mag_dam[char]
        mresist[char]   += (2/100)*mresist[char]  
        crit_chance     += 2;
        crit_dam        += 2;    
        break;
    case "CHIEF":
        hpmax[char]     += (8/100)*hpmax[char]
        atk_dam[char]   += (2/100)*atk_dam[char]
        defense[char]   += (4/100)*defense[char]
        mag_dam[char]   += (2/100)*mag_dam[char]
        mresist[char]   += (4/100)*mresist[char]  
        crit_chance     += 2;
        crit_dam        += 2;    
        break;
    case "TRANSCENDER":
        hpmax[char]     += (10/100)*hpmax[char]
        atk_dam[char]   += (5/100)*atk_dam[char]
        defense[char]   += (5/100)*defense[char]
        mag_dam[char]   += (5/100)*mag_dam[char]
        mresist[char]   += (5/100)*mresist[char]  
        crit_chance     += 5;
        crit_dam        += 5;
        break;
    default:
        break;    
}
//PASSIVE
hpmax[char]     += (((min(global.passive[0],PASSIVE_MAX)/5)*50)/100)*hpmax[char]
atk_dam[char]   += (((min(global.passive[1],PASSIVE_MAX)/5)*20)/100)*atk_dam[char]
defense[char]   += (((min(global.passive[4],PASSIVE_MAX)/5)*100)/100)*defense[char]
wlk_spd[char]   += (((min(global.passive[5],PASSIVE_MAX)/5)*10)/100)*wlk_spd[char]
mag_dam[char]   += (((min(global.passive[6],PASSIVE_MAX)/5)*20)/100)*mag_dam[char]
mresist[char]   += (((min(global.passive[7],PASSIVE_MAX)/5)*100)/100)*mresist[char]

//LIGHT COLOR
if global.dungeon_name == "DARK_DUNGEONS" col = c_aqua+c_white;// else if global.dungeon_name == "FORGOTTEN LIBRARY" col = choose(c_yellow,c_orange+c_yellow)

//STATS
level           = 1;
hp              = hpmax[char];
hpb             = hp;
expcur          = 0;
expmax          = 50;
coin            = 0;
stat_pnt        = 0//14;
skill_pnt       = 1//8;

//LOOTS
large_potion    = 1;
silver_key      = 0;
golden_key      = 0;

//item
has_compass     = false

//stats gui
show_add_stats  = false;
atk_scale       = 1;
def_scale       = 1;
spd_scale       = 1;
buff_angle      = 0;

torch_index     = 0;
seconds         = 0;
global.coins    = 0; //RESET RECORD COIN
skill_act       = 1;

//BURN
if char == 4
{
    burn_chance = 10;
    burn_damage = 5;
    burn_second = 5;
    burn_duration = 3;
}
//CRIT
if char == 2
    crit_chance += 5
//KNOCKBACK
if char == 0 or char == 3
    knockback = 5;
//WEAPON SWITCH
if char == 7
{
    ability_lvl[2] = 1;
    fstrike     = 1;
}else
{
    fstrike     = 0;
}

//light
set_light_properties(spr_Light,0,0,.6,.6,0,merge_colour(c_yellow,c_orange,0.5),image_alpha/2);
//ARCHER
mx = mouse_x;
my = mouse_y;
arrow = 20;
norm_blend = image_blend;

//UNLOCK
skeletonkill = 0;

//weapon[char] = spr_Golden_Sword;

map_update_timer=0; //The mini-map update timer. This will determine how many times the map
//is refreshed per second.
extra_cursor_offset = 0; //The cursor offset's extra amount. Abilities can change this value.

mapProgress = ds_grid_create(global.W/64,global.H/64); //MapProgress

//Shield Mechanics
uses_shield=true;
shield_amount=0;
if (global.difficulty == EASY)
{
    shield_amount+=20;
}
create_shield_surface(32,DS_LBLUE);

fought_normal_merlin=false;
just_killed_owl=false;

//Silhouette
silhouetteColour = c_gray;
//instance_create(0,0,obj_juju_silhouette);
activate = false;
blink = 3;
flash = false;

//Coop
revive_option = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fairy
//with instance_create(x,y,obj_Bane_Scepter) item_price = 0;
//with instance_create(x,y,obj_Common_Scepter) item_price = 0;
//with instance_create(x,y,obj_Blood_Scepter) item_price = 0;
//with instance_create(x,y,obj_Bane_Scepter) item_price = 0;
///FAIRY
if instance_exists(obj_Hero) {   
    with ( obj_Hero ) { 
        x = other.x;
        y = other.y       
        switch(rank_title[rank[char]])
        {
            case "ESQUIRE":
                if !instance_exists(obj_Esquire_Fairy)
                    instance_create(x,y,obj_Esquire_Fairy);
                break;
            case "NOBLE":
                if !instance_exists(obj_Noble_Fairy)
                    instance_create(x,y,obj_Noble_Fairy);
                break;
            case "MASTER":
                if !instance_exists(obj_Master_Fairy)
                    instance_create(x,y,obj_Master_Fairy);
                break;
            case "CHIEF":
                if !instance_exists(obj_Chief_Fairy)
                    instance_create(x,y,obj_Chief_Fairy);
                break;
            case "TRANSCENDER":
                if !instance_exists(obj_Transcender_Fairy)
                    instance_create(x,y,obj_Transcender_Fairy);
                break;
            default:
                break;
        }
    }
}

//NECRO VARIABLES
active_skeletons=0;

//BRAWLER VARIABLES
brawler_slashes=0;
brawler_spin=0;
brawler_spin_dmg_timer=0.1*room_speed;
spinang=0;
brawler_invul=false;
brawler_extra_defense=30;
brawler_applied_extra_def=false;
has_spectral_pierce=false;

//FORGE_INIT
forge_load_weapon_effects(char);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Corpse
if (global.coop) {
    with ( instance_create(x,y,obj_hero_corpse) ) {
        sprite_index = other.spr_dead[other.char];
    }
    if (player == 0) {
       global.player_1 = true;
    } else {
      global.player_1 = false;
    }

} else {
    with ( instance_create(x,y,obj_Corpse ) ) {
        sprite_index = other.spr_dead[other.char];
    }
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vibration Stop
gamepad_set_vibration(0,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Sound Fix
if (audio_is_playing(snd_step) ) {
    sound_stop(snd_step);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blizzard Effect
with (obj_Enemy) {
    if (instance_exists(obj_Hero)) {
        //BLIZZARD CAPE EFFECT
        if (quick_judge(x,y,obj_Hero.x,obj_Hero.y,60,60)) {
            if (distance_to_object(obj_Hero)&lt;=40) {
                //MAGIC
                var col = c_white;
                var tot_mresist = mresist + mr_bon;
                var true_magic = floor( ( 100 / ( 100 + tot_mresist ) ) * 15 );
                
                var leftover_dam=true_magic;
                if (uses_shield &amp;&amp; shield_amount&gt;0) {
                    leftover_dam = true_magic-shield_amount;
                    shield_amount-=true_magic;
                }
                if (leftover_dam&lt;0) {
                    leftover_dam=0;
                }    
                hp -= leftover_dam;
                if (true_magic &gt; 0) {
                    alarm[10]=2*room_speed;
                    Popup("-"+string(ceil(true_magic)),col); //POPUP
                }
                if (Item_Value(spr_Blizzard_Cape)==2) {
                    if ( Test_Chance(40) ) {
                        //with other
                        {
                            obj = instance_create(x,y,obj_St_Slowed)
                            obj.owner       = id;
                            obj.pdamage     = 0;
                            obj.sec         = 0;
                            obj.alarm[1]    = 1*room_speed;
                        }
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Brawler Slashing Swords
if (brawler_slashes&gt;0)
{
    if (instance_exists(obj_Enemy))
    {
        brawler_slashes--;
        global.shake+=10;
        if (global.flash)
        {
            instance_create(x,y,obj_White_Flash);
        }
        var damageMultiplier=1;
        if (Item_In_List(spr_Amplifying_Tome))
        {
            damageMultiplier*=2;
        }
        var nearest = instance_nearest(x,y,obj_Enemy);
        if (distance_to_object(obj_Enemy)&lt;96)
        {
            create_lined_afterimages(0.2*room_speed,spr_Brawler_Idle,3,x,y,nearest.x,nearest.y);
            x = nearest.x;
            y = nearest.y;
            Create_Projectile(x,y,attack_obj[char],team,atk_spd[char],
            crit_chance,((100+(40*ability_lvl[2]))*0.01)*atk_dam[char]*damageMultiplier,((100+(40*ability_lvl[2]))*0.01)*dam_bon[char]*damageMultiplier,
            0,0,knockback,angle,accuracy[char],acc_bon[char],true)
            alarm[7]=0.2*room_speed;
        }
        else
        {
            brawler_slashes=0;
            status="";
            canmove=true;
        }
    }
    else
    {
        brawler_slashes=0;
        status="";
        canmove=true;
    }
}
else
{
    status="";
    canmove=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Arrow
if arrow &gt; 0
{
    arrow -= 1;
    alarm[6] = 5-(arrow/20)*3;
    len = Random(0,64)
    dir = Random(0,360);
    xx = mx + len * cos(dir * pi / 180);
    yy = my - len * sin(dir * pi / 180);    
    if tile_layer_find(100,xx,yy)
    {    
        Play_Sound(snd_arrow,random_range(0.8,0.9),0.4,0,4000,false,false)
        instance_create(xx,yy,obj_Rain_Arrow_Spot);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack C
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPAWN ENEMIES
spawn = true;
alarm[4] = 60*Random(2,3);

var near_shop=false;

if (instance_exists(obj_Merchant))
{
    near_shop = quick_judge(x,y,obj_Merchant.x,obj_Merchant.y,160,160);
}

repeat(Random(2,4))
{
    if global.boss_rm != 3 and instance_number(obj_Enemy) &lt; 15 and global.mark != instance_number(obj_Mark)
    {
        with instance_find(obj_Floor_Mark,Random(0,instance_number(obj_Floor_Mark)))
        {
            if distance_to_object(obj_Hero) &gt; 96 &amp;&amp; !near_shop
            {
                if global.loop &lt; 2
                {
                    if global.dungeon_name == ENVIRO1
                    {
                        if global.TYPE == 1
                        {
                            if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_Skeleton)
                            else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_Shadow_Eye) ;
                            else if (floor(random(50))&lt;1)    Spawn(x+16,y+16,obj_Ghost);
                            else if (floor(random(30))&lt;1)   Spawn(x+16,y+16,obj_Taurus);
                            //else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                        }else
                        if global.TYPE == 2
                        {                            
                            if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_Skeleton_Warrior);
                            else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_Shadow_Eye)
                            else if (floor(random(15))&lt;1)   Spawn(x+16,y+16,obj_Skeleton_Archer)
                            else if (floor(random(5))&lt;1)    Spawn(x+16,y+16,obj_Bat)
                            else if (floor(random(60))&lt;1)    Spawn(x+16,y+16,obj_Ghost)
                            else if (floor(random(30))&lt;1)   Spawn(x+16,y+16,obj_Taurus)
                            //else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                        }
                    }else
                    if global.dungeon_name == ENVIRO2
                    {
                        if global.TYPE == 1
                        {
                            if (floor(random(3))&lt;1)         {Spawn(x+16,y+16,obj_Slime);}
                            else if (floor(random(3))&lt;1)   {Spawn(x+16,y+16,obj_Hive);}
                            else if (floor(random(3))&lt;1)   Spawn(x+16,y+16,obj_Explosive_Slime);
                            else if (floor(random(20))&lt;1)   {Spawn(x+16,y+16,obj_Rat);}
                            else if (floor(random(50))&lt;1)   {Spawn(x+16,y+16,obj_Mushroom);}
                            else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                        }else
                        if global.TYPE == 2
                        {
                            if (floor(random(10))&lt;1)        Spawn(x+16,y+16,obj_Beetle);
                            else if (floor(random(3))&lt;1)   Spawn(x+16,y+16,obj_Explosive_Slime);
                            else if (floor(random(3))&lt;1)   Spawn(x+16,y+16,obj_Hive);
                            else if (floor(random(10))&lt;1)    Spawn(x+16,y+16,obj_Rat);                        
                            else if (floor(random(20))&lt;1)   Spawn(x+16,y+16,obj_Mushroom);
                            else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}                            
                        }            
                    }else
                    if global.dungeon_name == ENVIRO3
                    {
                        if (floor(random(10))&lt;1)            Spawn(x+16,y+16,obj_Ice_Eyeball);
                        else if (floor(random(20))&lt;1)       Spawn(x+16,y+16,obj_Snowman);
                        else if (floor(random(80))&lt;1)       Spawn(x+16,y+16,obj_Crystal_Monster);
                        else if (floor(random(30))&lt;1)       Spawn(x+16,y+16,obj_Yeti);                    
                        else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                    }else
                    if global.dungeon_name == ENVIRO4
                    {
                        if (floor(random(5))&lt;1)             Spawn(x+16,y+16,obj_Fly);
                        else if (floor(random(15))&lt;1)       Spawn(x+16,y+16,obj_Shadow_Eye);
                        else if (floor(random(10))&lt;1)       Spawn(x+16,y+16,obj_Black_Devil);
                        else if (floor(random(20))&lt;1)       Spawn(x+16,y+16,obj_Black_Ball_Eye);
                        else if (floor(random(30))&lt;1)       Spawn(x+16,y+16,obj_Skeleton_Mage);
                        else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                    }else
                    if global.dungeon_name == ENVIRO5
                    {
                        if global.TYPE == 1
                        {
                            if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_Dragon)
                            else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_Shadow_Eye) ;
                            else if (floor(random(15))&lt;1)   Spawn(x+16,y+16,obj_Skeleton_Mage);
                            else if (floor(random(5))&lt;1)    Spawn(x+16,y+16,obj_Red_Devil);
                            else if (floor(random(30))&lt;1)   Spawn(x+16,y+16,obj_Taurus);
                            else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                        }else
                        if global.TYPE == 2
                        {                            
                            if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_Skeleton_Warrior);
                            else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_Shadow_Eye)
                            else if (floor(random(15))&lt;1)   Spawn(x+16,y+16,obj_Skeleton_Archer)
                            else if (floor(random(5))&lt;1)    Spawn(x+16,y+16,obj_Dragon)
                            else if (floor(random(30))&lt;1)   Spawn(x+16,y+16,obj_Taurus)
                            else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                        }
                    }else
                    if global.dungeon_name == SECRET1
                    {
                        if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_GWizard)
                        else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_PWizard) ;
                        else if (floor(random(15))&lt;1)   Spawn(x+16,y+16,obj_RWizard);
                    }else
                    if global.dungeon_name == SECRET2
                    {
                        if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_Jelly)
                        else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_Sprite) ;
                    }                
                }else
                {
                    if (floor(random(25))&lt;1)        Spawn(x+16,y+16,obj_Skeleton)
                    else if (floor(random(80))&lt;1)   Spawn(x+16,y+16,obj_Shadow_Eye) ;
                    else if (floor(random(15))&lt;1)   Spawn(x+16,y+16,obj_Skeleton_Mage);
                    else if (floor(random(5))&lt;1)    Spawn(x+16,y+16,obj_Red_Devil);
                    else if (floor(random(30))&lt;1)   Spawn(x+16,y+16,obj_Taurus);
                    else if (floor(random(25))&lt;1)   Spawn(x+16,y+16,obj_Skeleton_Warrior);
                    else if (floor(random(15))&lt;1)   Spawn(x+16,y+16,obj_Skeleton_Archer)
                    else if (floor(random(5))&lt;1)    Spawn(x+16,y+16,obj_Bat)   
                    else if (floor(random(3))&lt;1)    Spawn(x+16,y+16,obj_Slime);
                    else if (floor(random(20))&lt;1)   Spawn(x+16,y+16,obj_Rat);
                    else if (floor(random(50))&lt;1)   Spawn(x+16,y+16,obj_Mushroom);
                    else if (floor(random(60))&lt;1)   Spawn(x+16,y+16,obj_SlimeBoy); 
                    else if (floor(random(10))&lt;1)   Spawn(x+16,y+16,obj_Beetle);
                    else if (floor(random(10))&lt;1)   Spawn(x+16,y+16,obj_Ice_Eyeball);
                    else if (floor(random(20))&lt;1)   Spawn(x+16,y+16,obj_Snowman);
                    else if (floor(random(30))&lt;1)   Spawn(x+16,y+16,obj_Yeti);
                    else if (floor(random(5))&lt;1)    Spawn(x+16,y+16,obj_Fly);
                    else if (floor(random(10))&lt;1)   Spawn(x+16,y+16,obj_Black_Devil);
                    else if (floor(random(20))&lt;1)   Spawn(x+16,y+16,obj_Explosive_Slime);
                    else if (floor(random(100))&lt;1) and global.loop &gt; 0   {Spawn(x+16,y+16,obj_SSWarrior);Spawn(x+16,y+16,obj_SSArcher);Spawn(x+16,y+16,obj_SSMage);}
                    if (floor(random(20))&lt;1)        Spawn(x+16,y+16,obj_Black_Ball_Eye);                                                                                                                                               
                }
            }
        }                   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///active
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESET
buff_dam = 0; //bonus damage
buff_def = 0; //base def
buff_spd = 0; //walking speed;
buff_cd[0] = 0; //cooldown reduct  
invul = false;
if status == "regen"
{
    hp_regen -= (10+(2*ability_lvl[2]))/3;
}
status = "";
visible = true;
image_alpha = 1;
if name[char] == "THIEF"
{
    with instance_create(x,y,obj_Smoke_Bomb) depth = other.depth-1;
    //Smoke(8,2,360,depth,0.2,merge_color(c_aqua,c_blue,0.5),4);
    scr_part_smoke(8,360,random(5),1.8,depth,4,merge_color(c_aqua,c_blue,0.5),random(360),1);//Smoke replacement
    
}
if char == 0 or char == 1
    alarm[1] = cooldownB[char] - (buff_cd[1]/100)*cooldownB[char];
if char == 2 or char == 5
    alarm[5] = cooldownC[char] - (buff_cd[2]/100)*cooldownC[char];
//if instance_exists(obj_Rage_Aura) with obj_Rage_Aura instance_destroy();
//if instance_exists(obj_WhiteBall) with obj_WhiteBall instance_destroy();
//sound_stop(snd_ticktock);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack B
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attack A
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PARTICLE
if ( status == "rage" ) {
    repeat(random(2)) {
        obj = instance_create(x,y+sprite_height/2,obj_Rage_Part)
        obj.speed = 2+random(1);
        obj.direction = random(360);
        obj.image_angle = obj.direction;
        obj.image_alpha = 0.5+random(0.5);
        obj.friction = 0.2;
    }
} else if ( status == "invisible" || dash &gt; 0 ) {
    visible = false;
    with ( instance_create(x,y,obj_Arrow_Trail) ) {
        sprite_index = other.sprite_index;
        image_index = other.image_index;
        image_speed = 0;
        image_alpha = 0.1;
        image_xscale = other.facing;
        image_blend = merge_colour(c_aqua,c_white,0.6)
    }
}

if ( char == 3 ) {
    if instance_exists(obj_Slash_Burst) {
        visible = false;
        can_move = false; 
    } else {
        visible = true;
        can_move = true; 
    }
}

if ( fstrike ) {
    if ( random(3)&lt;1 ){
        with ( instance_create(x+choose(random(8),-random(8)),y+choose(random(8),-random(8)),obj_Circle_Part) ) {
            col = c_red;
            maxrad = random_range(3,6);
            rad = maxrad;
            fspd = 0.1;
            vspeed = -2+random(-.1);
        }
    }
}
//GREED
coin += (((min(global.passive[8],PASSIVE_MAX)*0.2)*1))*0.000555555;
//***********************REGEN**********************//
if ( hp_regen &gt; 0 ) {
    seconds += 1;
    if ( seconds &gt; 60 ) {
        if ( hp &lt; hpmax[char] ) {
            hp += hp_regen; 
            repeat(ceil(random(3))*hp_regen)
                with instance_create(x+choose(random(8),-random(8)),y+choose(random(4),-random(4)),obj_Heal_Part) {
                    depth=other.depth-1
                    vspeed=-(0.5+random(0.5))-other.hp_regen/4;
                }
        }
        seconds = 0;   
    }
}

if instance_place(x,y,obj_Blood_Stain)// and on_blood = false
{
    //on_blood = true     
    if ds_list_find_index(global.list,spr_Zombie_Tooth) != -1 {
        hp += (5+((Item_Value(spr_Zombie_Tooth)+1)*2))/(180);
        //hp_regen = hp_regen+((5+((Item_Value(spr_Zombie_Tooth)+1)*2))/3);
    }
    //if ds_list_find_index(global.list,spr_Blood_Foot) != -1 then wlk_spd[char] = wlk_spd[char]+((20/100)*wlk_spd[char])
}/*else 
if !instance_place(x,y,obj_Blood_Stain) and on_blood = true
{
    on_blood = false;
    if ds_list_find_index(global.list,spr_Zombie_Tooth) != -1
    {
        if hp_regen-((10+((Item_Value(spr_Zombie_Tooth)+1)*2))/3) &lt; 0
            hp_regen = 0
        else
            hp_regen = hp_regen-((5+((Item_Value(spr_Zombie_Tooth)+1)*2))/3);
    }
    //if ds_list_find_index(global.list,spr_Blood_Foot) != -1 then wlk_spd[char] = wlk_spd[char]-((20/100)*wlk_spd[char])    
}*/

//EFFECT
if ( (ds_list_find_index(global.list,spr_Zombie_Tooth) != -1) &amp;&amp; (instance_place(x,y,obj_Blood_Stain)) &amp;&amp; (hp &lt; hpmax[char]) )
    if ( random(8)&lt;1 )
        with instance_create(x+choose(-random(6),random(6)),y+choose(-random(12),random(12)),obj_Blood_Lust_Part) depth = choose(depth,other.depth-1);

if ( ds_list_find_index(global.list,spr_Venom) != -1 )       
    if random(12)&lt;1
        with instance_create(x+choose(-random(6),random(6)),y+choose(-random(12),random(12)),obj_Venom_Part) depth = choose(depth,other.depth-1);
    
if ( ds_list_find_index(global.list,spr_Battery) != -1 ) {     
    if ( random(18)&lt;1 ) {
        Create_Projectile(x+lengthdir_x(Random(16,24),random(360)),y+lengthdir_y(Random(16,24),random(360)),obj_Electric_Shock,team,0.5,10,(10/100)*atk_dam[char],dam_bon[char],mag_dam[char],mag_bon[char],knockback,random(360),99,1,false);
    }
}
//FLAME
if ( ds_list_find_index(global.list,spr_Magma_Worm_Tail) != -1 ) {
    if ( !instance_place(x,y,obj_Small_Flame) &amp;&amp; (speed &gt; 0) ) {
        with ( instance_create(x+choose(random(5)-random(5)),y+4+choose(random(5)-random(5)),obj_Small_Flame) ) {
            team = other.team;
            creator = other.id;
        }
    }
}





</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROLS
scr_get_input_player(player);
scr_screenshot();
var stick_sensitivity=0.005;

//Pause
if (start) {
    instance_create(view_xview,view_yview,obj_pause);
}

/*clamp(x,view_xview,view_xview+view_wview);
clamp(y,view_yview,view_yview+view_hview);*/
if ( can_move == true &amp;&amp; !is_cinematic_displayed() ) {
    if (global.coop) {
    if ( y &gt; view_yview ) then if cont_up  {vspeed -= 1;}
    if ( y &lt; view_yview+view_hview ) then if cont_dn {vspeed += 1;}
    if ( x &gt; view_xview ) then if cont_lf  {hspeed -= 1;}
    if ( x &lt; view_xview+view_wview ) then if cont_rt  {hspeed += 1;}
    } else {
       if cont_up  {vspeed -= 1;}
       if cont_dn {vspeed += 1;}
       if cont_lf  {hspeed -= 1;}
       if cont_rt  {hspeed += 1;}
    }
}

/*var border = 10;
clamp(x,view_xview+border,view_xview+view_wview-border);
clamp(y,view_yview+border,view_yview+view_hview-border);*/
    
if ( cont_ml and !cont_mr and brawler_spin==0 ) {    
    with obj_HUD {
        if ( stat == false and global.inv == false )
            with (other) if ( alarm[0] == -1 ) {            
                Attack();
            }
    }
}

if (brawler_spin&gt;0) {
    brawler_spin--;
    spinang+=30;
    //status="invulnerable";
    //brawler_invul = true; //Tell the game this invulnerability comes from this ability.
    if (!brawler_applied_extra_def)
    {
        brawler_applied_extra_def=true;
        def_bon[char]+=brawler_extra_defense;
    }
    if (brawler_spin_dmg_timer&gt;0) {
        brawler_spin_dmg_timer--;
    }
    else {
        brawler_spin_dmg_timer=0.1*room_speed;
        damageMultiplier=1;
        if (Item_In_List(spr_Amplifying_Tome))
        {
            damageMultiplier*=2;
        }
        with (obj_Hit)
        {
            if (quick_judge(x,y,other.x,other.y,96,96))
            {
                if (distance_to_object(other)&lt;32)
                {
                    with (other)
                    {
                        Create_Projectile(other.x,other.y,attack_obj[char],team,atk_spd[char],
                        crit_chance,((40+(10*ability_lvl[1]))*0.01)*atk_dam[char]*damageMultiplier,((40+(10*ability_lvl[1]))*0.01)*dam_bon[char]*damageMultiplier,
                        0,0,knockback,angle,accuracy[char],acc_bon[char],true)
                        obj.image_xscale=0.1;
                        obj.image_yscale=0.1;
                    }
                }
            }
        }
        with (obj_Prop)
        {
            if (quick_judge(x,y,other.x,other.y,96,96))
            {
                if (distance_to_object(other)&lt;32)
                {
                    with (other)
                    {
                        Create_Projectile(other.x,other.y,attack_obj[char],team,atk_spd[char],
                        crit_chance,((40+(10*ability_lvl[1]))*0.01)*atk_dam[char]*damageMultiplier,((40+(10*ability_lvl[1]))*0.01)*dam_bon[char]*damageMultiplier,
                        0,0,knockback,angle,accuracy[char],acc_bon[char],true)
                        obj.image_xscale=0.1;
                        obj.image_yscale=0.1;
                    }
                }
            }
        }
        with (obj_Trap)
        {
            if (quick_judge(x,y,other.x,other.y,96,96))
            {
                if (distance_to_object(other)&lt;32)
                {
                    with (other)
                    {
                        Create_Projectile(other.x,other.y,attack_obj[char],team,atk_spd[char],
                        crit_chance,((40+(10*ability_lvl[1]))*0.01)*atk_dam[char]*damageMultiplier,((40+(10*ability_lvl[1]))*0.01)*dam_bon[char]*damageMultiplier,
                        0,0,knockback,angle,accuracy[char],acc_bon[char],true)
                        obj.image_xscale=0.1;
                        obj.image_yscale=0.1;
                    }
                }
            }
        }
    }
}
else {
    brawler_spin=0;
    spinang=0;
    if ( brawler_applied_extra_def ) {
        brawler_applied_extra_def=false;
        def_bon[char]-=brawler_extra_defense;
        var cooldownMultiplier=1;
        if (Item_In_List(spr_Amplifying_Tome)) {
            cooldownMultiplier*=2;
        }
        alarm[1] = (cooldownB[char] - (buff_cd[1]/100)*cooldownB[char])*cooldownMultiplier;
    }
}

//NEW CONTROLS
if global.autocast {
    if ( alarm[1] == -1 and skill_act == 1 and key_sskill and ability_lvl[1] &gt; 0 ) {
        with ( obj_HUD ) {
            if stat == false and global.inv == false
                with other if alarm[1] == -1 {  
                    AttackB();
                }
        }
    }else if ( alarm[5] == -1 &amp;&amp; skill_act == 2 &amp;&amp; key_tskill &amp;&amp; ability_lvl[2] &gt; 0 ) {
         with ( obj_HUD ) {
            if ( stat == false &amp;&amp; global.inv == false )
                with (other) if alarm[5] == -1
                {  
                    AttackC();
                }
        }   
    }
}else {
    if ( alarm[1] == -1 &amp;&amp; skill_act == 1 &amp;&amp; cont_mrr &amp;&amp; ability_lvl[1] &gt; 0 ) {
        with ( obj_HUD ) {
            if ( !stat &amp;&amp; !global.inv )
                with other if alarm[1] == -1
                {  
                    AttackB();
                }
        }
    }else if ( alarm[5] == -1 &amp;&amp; skill_act == 2 &amp;&amp; cont_mrr &amp;&amp; ability_lvl[2] &gt; 0 ) {
         with obj_HUD {
            if stat == false and global.inv == false
                with other if alarm[5] == -1
                {  
                    AttackC();
                }
        }   
    }
}


//CHANGE SKILL
if (ability_lvl[1] &gt; 0 and ability_lvl[2] &gt; 0) {
    //MOUSE WHEEL
    var order_change = false;
    order_change = mouse_wheel_up() || mouse_wheel_down();
    if skill_act &gt; 1 {
        if order_change {    
            Play_Sound_Normal(snd_change,1,0.5,0,5000,true,false);
            skill_act -= 1;
        }
    }
    else if ( skill_act  &lt; 2 ) {
        if order_change {    
            Play_Sound_Normal(snd_change,1,0.5,0,5000,true,false);
            skill_act += 1;
        }
    }
    
    if ( key_sskill ) {
        Play_Sound_Normal(snd_change,1,0.5,0,5000,true,false);
        skill_act = 1;
    }
    else if ( key_tskill ) {
        Play_Sound_Normal(snd_change,1,0.5,0,5000,true,false);
        skill_act = 2;
    }
}
else {
    if ( ability_lvl[1] &gt; 0 )
        skill_act = 1;
    else if ( ability_lvl[2] &gt; 0 )
        skill_act = 2;
}

if potion_key1 {
    if global.potionA &gt; 0
        Potion_Effect(ds_list_find_value(global.potion_nameA,0));
    ds_list_delete(global.potionA,0);
    ds_list_delete(global.potion_nameA,0);
    ds_list_delete(global.potion_descA,0);
    ds_list_delete(global.potion_objectA,0);
}
if potion_key2 {
    if global.potionB &gt; 0
        Potion_Effect(ds_list_find_value(global.potion_nameB,0));
    ds_list_delete(global.potionB,0);
    ds_list_delete(global.potion_nameB,0);
    ds_list_delete(global.potion_descB,0);
    ds_list_delete(global.potion_objectB,0);        
}
if potion_key3 {
    if global.potionC &gt; 0
        Potion_Effect(ds_list_find_value(global.potion_nameC,0));
    ds_list_delete(global.potionC,0);
    ds_list_delete(global.potion_nameC,0);
    ds_list_delete(global.potion_descC,0);
    ds_list_delete(global.potion_objectC,0);        
}

Add_Stats();
///Players
if (player = 1) {
    angle = point_direction(0, 0, gamepad_axis_value(0,gp_axisrh), gamepad_axis_value(0,gp_axisrv));
    if (angle &lt; 270 &amp;&amp; angle &gt; 90) {
        facing = -1;
    } else {
    facing = 1;
    }
  /*  back = 1;
    back = -1;*/
    /*if ( obj_HUD.sxx &lt; x ) then facing = -1;
    if ( obj_HUD.sxx &gt; x ) then facing = 1;

    if obj_HUD.syy &lt; y
    back = 1;
    else if obj_HUD.syy &gt; y
    back = -1;*/
    } 
    else {
    angle = point_direction(x,y,mouse_x,mouse_y);
    if ( mouse_x &lt; x ) then facing = -1;
    if ( mouse_x &gt; x ) then facing = 1;
    if mouse_y &lt; y
    back = 1
    else if mouse_y &gt; y
    back = -1
}

if buff_angle &gt; 360 buff_angle = 0;
buff_angle += 2;
image_blend = norm_blend;  
depth = -y;
audio_listener_position(x,y,0); //AUDIO


//
if global.level &lt; 999
{
    if expcur &gt; expmax
    {
        //LEVEL UP
        Play_Sound(snd_levelup,1,0.5,0,5000,true,false);
        //Create_Lvl_Part();     
        obj             = instance_create(x,y,obj_Levelup_Label);          
        obj.creator     = id;
        show_add_stats  = true;
        stat_pnt        += max(1,min(floor(rank[global.choice]*0.5),2))+min(floor(global.level*0.1),2);
        global.level    += 1;
        level           += 1;          
        if (global.level mod 3 == 0) and global.level &lt; 30 {skill_pnt       += 1;} 
        //(50/3)*(power(global.level,3) - (6*(power(global.level,2))) + (17*global.level) - 12) //http://tibia.wikia.com/wiki/Experience_Formula
        expmax          += ( (6/5)*(power(level,3)) ) - ( (15)*power(level,2) ) + (100*level) - 140         
        expcur          = 0;
        var hpMultiplier=1;
        if (Item_In_List(spr_Scepter_of_Power))
        {
            hpMultiplier*=0.5;
        }
        hpmax[char]     += hpMultiplier*(0.05)*hpmax[char];
        hp              += (0.5)*hpmax[char];
        if ( global.difficulty == EASY ) {
            var key="N/A";
            key = max ( Return_ContKey(ds_map_find_value(global.ckeys,"stat")), Return_Key(ds_map_find_value(global.keys,"stat")) );
            add_notification(spr_Level_Up,24,"Level Up!#Press "+key+" to spend points!",2);
        }
        //hp              = hpmax[char];             
    }
}else {
    expcur = expmax;
}
//RANK
if ( rank[char] &lt; 5 ) {
    if ( global.rank_cur_point[char] &gt;= rank_point[rank[char]] ) {
        rank[char] += 1;    
        global.rank_cur_point[char] = 0
        Save_Stats();
    }
}

if ( hp&gt;hpmax[char] ) then {hp = hpmax[char];}
if ( hp&gt;hpb ) then {hpb=hp}
if ( hpb &gt; hp ) then hpb-=0.4;
if ( hp&lt;=0 ) {   
    if (Item_In_List(spr_Angel_Feather))
    {
        var value = Item_Value(spr_Angel_Feather)-1;
        Item_Consume(spr_Angel_Feather);
        hp=hpmax[char]*(0.3+0.1*value);
        repeat (10) instance_create(x+random_range(-16,16),y+random_range(-16,16),obj_White_Flash);
        repeat (20) instance_create(x+random_range(-16,16),y+random_range(-16,16),obj_Beam);
    }
    else
    {
        global.coins += coin; 
        if global.difficulty != EASY global.total_coins += coin;
        global.deaths += 1;    
        Save_Stats();
        //Special interactions:
        ini_open("DGSC.ds");
        if (instance_exists(BOSS2))
        {
            died_slime_boss++;
        }
        if (instance_exists(BOSS4))
        {
            died_soul_guardian++;
        }
        if (instance_exists(BOSS5) || instance_exists(BOSS6))
        {
            died_judgement++;
        }
        if (instance_exists(SBOSS1_STORY))
        {
            dark_merlin_deaths++;
        }
        ini_write_real(CUTSCENE_SYSTEM,DARK_MERLIN_DEATHS,dark_merlin_deaths);
        ini_write_real(CUTSCENE_SYSTEM,DEATH_TO_BOSS_SLIME,died_slime_boss);
        ini_write_real(CUTSCENE_SYSTEM,DEATH_TO_SOUL_GUARDIAN,died_soul_guardian);
        ini_write_real(CUTSCENE_SYSTEM,DEATH_TO_JUDGEMENT,died_judgement);
        ini_close();
        with obj_HUD alarm[0] = 60;
        instance_destroy();
    }
}

/*var key_potion;

if (gamepad_detected) {
    var pad = gamepad_get_index(0);
    if (pad!=-1) {
        key_potion=gamepad_button_check(pad,ds_map_find_value(global.ckeys,"potion"));
    }
}
/*else if (joystick_detected)
{
    var _key=ds_map_find_value(global.ckeys,"potion");
    if (_key==gp_padu)
    {
        key_potion=joystick_data[0,8]==0; //D-Pad UP
    }
    else
    {
        key_potion=joystick_button_pressed[0,gamepad_to_joystick(_key)];
    }
}*//*
else {
    key_potion = keyboard_check_pressed(ds_map_find_value(global.keys,'potion'));
}*/
if (global.coop &amp;&amp; player = 1) {
wepang = angle;
}

//USE POTION
if key_potion {
    //ACTIVE ABILITY
    if ( alarm[3] = -1 and ds_list_size(global.item_act) ) &gt; 0 {
        Play_Sound(snd_potion,1,0.5,0,5000,true,false);
        Use_Active();
        alarm[3] = 60*30;
    }
}
if speed = 0
{if sprite_index != spr_hurt[char]
sprite_index = spr_idle[char]}
else
{if sprite_index != spr_hurt[char]
sprite_index = spr_walk[char]}
if sprite_index = spr_hurt[char]
{if image_index &gt; 2
sprite_index = spr_idle[char]}

if dash &gt; 0
{
    dash -= 1;
    //Smoke(1,1,360,depth,0.2,c_dkgray,3);
    scr_part_smoke(1,360,random(5),.8,depth,3,c_dkgray,0,1);//Smoke replacement
    motion_add(point_direction(x,y,mouse_x,mouse_y),12)
    if speed &gt; 12 speed = 12;
    if name[char] == "THIEF"
        Create_Projectile(x+lengthdir_x(24,angle),y+lengthdir_y(24,angle),obj_Thief_Trail_Dam,team,atk_spd[char],crit_chance,atk_dam[char],dam_bon[char],mag_dam[char],mag_bon[char],knockback,angle,100,0,false);
}else
{
    visible = true;
    var haste_offset=0;
    if (Item_In_List(spr_Shoes_of_Haste)) {
        var extra_speed=wlk_spd[char];
        buff_spd+=extra_speed;
        haste_offset=1;
        if (!speedup) {
            if (buff_spd&gt;1) {
                buff_spd=1;
            }
        }
        else {
            if (buff_spd&gt;2) {
                buff_spd=2;
            }
        }
    }
    if speedup {
        if speed &gt; wlk_spd[char]+buff_spd+1
            speed = wlk_spd[char]+buff_spd+1
    }
    else {
        if ( ds_list_find_index(global.list,spr_Blood_Foot) != -1 and instance_place(x,y,obj_Blood_Stain) ) {
            var tmp;
            tmp = wlk_spd[char]+buff_spd+((0.2)*wlk_spd[char]);
            if speed &gt; tmp
                speed = tmp;
        }
        else {
            var tmp;
            tmp = wlk_spd[char]+buff_spd;
            if ( speed &gt; tmp ) then speed = tmp
            if ( speed &gt; 2+haste_offset ) then speed = 2+haste_offset;
        }
    }
}

if (global.coop &amp;&amp; player = 1) {
wepang = angle;
}


if ( atk_scale &gt; 1 ) then atk_scale -= 0.1;
if ( def_scale &gt; 1 ) then def_scale -= 0.1;
if ( spd_scale &gt; 1 ) then spd_scale -= 0.1;

scl = random(0.2);
if ( torch_index &lt; 1 ) {
    torch_index += random(0.04);
} else {
    torch_index += 0.4
}

//if speed &gt; 0
//    image_speed = ((speed/5/2)*.7)
//else
    image_speed = 0.2; //was 0.4*0.5

if ( Item_In_List(spr_Blizzard_Cape) ) {
    if (alarm[9]&lt;=0) {
        alarm[9]=1*room_speed;
    }
    if (random(1)&lt;0.5) {
        ob = instance_create(x+choose(random_range(-32,-8),random_range(8,32)),
        y+choose(random_range(-32,-8),random_range(8,32)),obj_PuffBall_Gravity);
        ob.speed=3;
        ob.direction = irandom(360);
        ob.owner=id;
        ob.image_alpha=random_range(0.5,1);
        ob.orbital=true;
        ob.ratio=0.25;
        ob.radius=irandom_range(8,32);
        ob.image_blend=DS_LBLUE;
        ob.lc_color=DS_PURPLE;
        ob.depth = depth+choose(-1,0,1);
    }
}
//light
set_light_properties(spr_Light,0,0,.8,.8,0,merge_colour(c_aqua,c_white,0.5),image_alpha*.5);

if (map_update_timer&lt;=0) {
    with obj_Wall {
        if (check_within_player_range(x,y,32,32) &amp;&amp; !mapvis) {
            //effect_create_above(ef_flare,x,y,0,c_red);
            if ( distance_to_object(other) &lt;= 128 ) then mapvis = true;
        }
    }
    
    with obj_Door {
        if ( check_within_player_range(x,y,48,48) ) {
            if ( distance_to_object(other) &lt;= 128 ) then mapvis = true;
        }
    }
    with ( obj_Merchant ) {
        if (check_within_player_range(x,y,48,48)) {
            if ( distance_to_object(other) &lt;= 128 ) then mapvis = true;
        }
    }
    with ( obj_Enemy ) {
        if (check_within_player_range(x,y,64,64)) {
            mapvis = (distance_to_object(other) &lt;= 256 and collision_line(x,y,other.x,other.y,obj_Wall,0,0) &lt; 0);
        }
    }
    map_update_timer = 0.05*room_speed; //Will update mini-map 20 times per second (1/0.05)
} else {
    map_update_timer--;
}
//if global.dungeon_name == ENVIRO3 and global.TYPE == 2
//{
//    friction = 0.02
//}else
//{
//STICKY
if ( instance_place(x,y,obj_Sticky) ) {
    friction = 1;
} else {
    friction = 0.20;
}
//}
//friction = wlk_spd[char]/10;

//KNOCKBACK
if ( knock &gt; 0 ) {
    walk = 0;
    knock -= 1;
    scr_part_smoke(1,360,random(5),.8,depth,3,c_dkgray,0,1);//Smoke replacement
    //Smoke(1,1,360,depth,0.2,c_gray,3);
    x = x+lengthdir_x(4,knock_dir);
    y = y+lengthdir_y(4,knock_dir);      
}
//Mini safety mechanism:
stat_pnt = ceil(stat_pnt);
skill_pnt = ceil(skill_pnt);

//CHEAT YEAH
//if file_exists(working_directory + "slousnoegnudCHEATS.ds")
{
    if keyboard_check(vk_control) and keyboard_check_pressed(vk_space){expcur = expmax+1;}
    if keyboard_check(vk_control) and keyboard_check_pressed(ord("M")){coin += 999;}  
    if keyboard_check(vk_control) and keyboard_check_pressed(ord("R")){global.rank_cur_point[char] += (50/100)*rank_point[rank[char]];}
    if keyboard_check_pressed(ord("H")){instance_create(x,y,obj_Wood_Chest)}
    if keyboard_check(vk_control) and keyboard_check_pressed(ord("X"))
    {
        with obj_Mark
            event_perform(ev_collision,obj_Hero)
    }
    if keyboard_check(vk_control) and keyboard_check_pressed(ord("V"))
    {
        repeat(800)
            instance_create(x,y,obj_Coin);
    }    
    if (keyboard_check(vk_control) and keyboard_check_pressed(ord("Z"))) {
        with BOSS1 hp=0;
        with BOSS2 hp=0;
        with BOSS3 hp=0;
        with BOSS4 hp=0;
        with SBOSS1 hp=0;
    }
}

/*else if (joystick_detected)
{    
    var pad_dir = joystick_data[0,9];
    var cont_up = joystick_check_stick_up(0);
    var cont_dn = joystick_check_stick_down(0);
    var cont_lf = joystick_check_stick_left(0);
    var cont_rt = joystick_check_stick_right(0);
    var cont_ml = joystick_button[0,gamepad_to_joystick(ds_map_find_value(global.ckeys,"fskill"))];
    var cont_mr = joystick_button[0,gamepad_to_joystick(ds_map_find_value(global.ckeys,"askill"))];
    var cont_mlp = joystick_button_pressed[0,gamepad_to_joystick(ds_map_find_value(global.ckeys,"fskill"))];
    var cont_mrp = joystick_button_pressed[0,gamepad_to_joystick(ds_map_find_value(global.ckeys,"askill"))];  
    var cont_mlr = joystick_button_released[0,gamepad_to_joystick(ds_map_find_value(global.ckeys,"fskill"))];
    var cont_mrr = joystick_button_released[0,gamepad_to_joystick(ds_map_find_value(global.ckeys,"askill"))];
    var dir, hs, vs, spd;
    spd = 128+extra_cursor_offset;
    hs=0;
    vs=0;
    
    var statToggle=false;
    
    if (instance_exists(obj_HUD))
    {
        statToggle=obj_HUD.stat || global.inv || global.controller_levelup_skill;
    }
        //VERSION 1 SCHEMATICS
    if (!statToggle)
    {
        dir = point_direction(0, 0, joystick_data[0,4], joystick_data[0,5]) 
        hs = lengthdir_x(abs(joystick_data[0,4]),dir);
        vs = lengthdir_y(abs(joystick_data[0,5]), dir);
        if (abs(hs)&gt;stick_sensitivity &amp;&amp; abs(vs)&gt;stick_sensitivity)
        {
            window_mouse_set((window_get_width()*0.5) + hs*spd, (window_get_height()*0.5) + vs*spd)
        }
    }
    
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD Actions
if (map_key) {
     global.mmap = !global.mmap;
}

if (inv_key) {
    if (global.inv = false) {
        if ( obj_HUD.stat == true ) then obj_HUD.stat = false
            global.inv = true
            global.lockcam = true;
    } else if ( global.inv = true ) {
        global.inv = false;
        global.lockcam = false;
    }
}

if (attr_key) {
    if (obj_HUD.stat = false) {
        if (global.inv == true ) then global.inv = false
        obj_HUD.stat = true;
        global.lockcam = true;
    
    } else if (obj_HUD.stat = true) {
        obj_HUD.stat = false;
        global.lockcam = false;
    } 
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Trap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Motion Add
motion_add(point_direction(other.x,other.y,x,y),other.size*1.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Loot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Motion Add
if (other.object_index==obj_Coin || other.object_index==obj_Diamond) {
    Add_Rank_Point(6);
    if ( ds_list_find_index(global.list,spr_Gold_Necklace) != -1 ) {
        other.value += 1;
    }
    //coin += other.value;
    global.all_coin += other.value;
    global.coin_ctr = 120;
    global.coin_col += other.value;
    with ( other ) {
        Play_Sound(snd_coin,choose(0.8,0.9),0.8,0,3000,true,false);
        instance_create(x,y,obj_Spark);
        instance_destroy();
    }
} else if (other.object_index==obj_Exp) {
    expcur+=other.value;
    Play_Sound(snd_heal,choose(1.1,0.9,1.0,1.2),0.8,0,3000,true,false);
    with (other) {
        instance_destroy();
    }
} else { //Ingredient
    add_ingredient(other.ing_type,other.value);
    Play_Sound(snd_heal,choose(1.1,0.9,1.0,1.2),0.8,0,3000,true,false);
    with (other) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Prop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Motion Add
if (other.team != team &amp;&amp; other.solid) {
    motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
    with ( other )
        if (size &lt; 3 and movable == true ) {
            motion_add(point_direction(other.x,other.y,x,y),0.5/size);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
motion_add(point_direction(other.x,other.y,x,y),other.size*.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Old Dir &amp; Speed
var olddir = direction;
var oldspeed = speed;
move_bounce_solid(true);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Skill Red Flash
if (other.team != team &amp;&amp; status != "invisible" &amp;&amp; status != "invulnerable" ) {    
    if ( sprite_index != spr_hurt[char] ) {
        scr_set_vibration(.4,.4,.25);
        Enemy_Status_Effect();      
        instance_create(x,y,obj_Red_Flash)
        Play_Sound(snd_skeleton_hit,random_range(0.7,0.8),0.3,0,3000,true,false); 
        //KNOCKBACK
        if ( char == 0 &amp;&amp; char == 3 )
            knock = other.knockback/2;
        else
            knock = other.knockback;
        knock_dir = point_direction(other.x,other.y,x,y);        
        if ds_list_find_index(global.list,spr_Madu_Buckler)!=-1 and Test_Chance((((Item_Value(spr_Madu_Buckler)+1)*5)+10)) {
            Popup("PARRIED!",c_yellow);
            Play_Sound(snd_parry,random_range(0.5,0.6),0.3,0,3000,true,false); 
        }else {
            //DAMAGE
            var tot_def = defense[char]+def_bon[char];
            var tot_dam = floor( ( 100 / ( 100 + tot_def ) ) * other.damage );            
            //MAGIC
            var tot_res = mresist[char]+mr_bon[char];
            var tot_mag = floor( ( 100 / ( 100 + tot_res ) ) * other.magic ); 
            var armorMultiplier=1;
            if (Item_In_List(spr_Vital_Armor)) {
                if (random(1)&lt;0.5) {
                    armorMultiplier*=-1;
                } else {
                    armorMultiplier*=2;
                }
            } 
            var finalDamage = (tot_dam+tot_mag)*armorMultiplier;
            if (Item_In_List(spr_Ninby_Grace)) {
                var heal_chance = 0.3+(0.1*(Item_Value(spr_Ninby_Grace)-1));
                if (random(1)&lt;heal_chance) {
                    if (armorMultiplier&gt;0) {
                        repeat (irandom_range(2,4))
                        {
                            ob = instance_create(x+random_range(-16,16),y+random_range(-16,16),obj_Heal_Part);
                            ob.image_blend = c_lime;
                            ob.depth = depth+choose(-1,0,1);
                        }
                        finalDamage*=-1;
                        armorMultiplier*=-1;
                    }
                }
            }
            var leftover_dam=finalDamage;
            if (uses_shield &amp;&amp; shield_amount&gt;0 &amp;&amp; finalDamage&gt;0) {
                leftover_dam =finalDamage -shield_amount;
                shield_amount-=finalDamage;
            }
            if (leftover_dam&lt;0) {
                leftover_dam=0;
            }
            hp -= leftover_dam;
            global.shake += 1;
            sprite_index = spr_hurt[char]
            image_index = 0
            motion_add(other.direction,4)
            if ( finalDamage &gt;= 1 &amp;&amp; armorMultiplier &gt; 0 ) {                
                if (leftover_dam&lt;=0) {
                    Popup("-"+string(finalDamage),c_aqua);
                } else {
                    Popup("-"+string(finalDamage),c_red);
                }
            }
            else if (armorMultiplier&lt;0 &amp;&amp; abs(finalDamage)&gt;=1) {
                Popup("+"+string(-finalDamage),c_lime);
            }
        }    
        with ( other )
            if ( type == 0 || type == 1 ) {
                instance_destroy();    
            } 
    }      
}

///Determine Killer
if (hp &lt;= 1) {
    if (instance_exists(other)) {
        with ( other ) {
            global.killer = creator;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Smoke Part
if ( speed &gt; 0  &amp;&amp; alarm[10] &lt; 0 ) {
    //Play_Sound_Normal(snd_step,random_range(0.8,1),0.1,0,1000,true,false)
    //Smoke(1,1,360,depth,0.1, merge_color(c_yellow,c_gray,random_range(0.7,1)),random(5));
    scr_part_smoke(1,360,random(5),1,depth,random(5),merge_color(c_yellow,c_gray,random_range(0.7,1)),1,1);//Smoke replacement 
    alarm[10] = room_speed*.3;   
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn
spawn = false;
alarm[4] = room_speed*Random(1,3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Specials
event_inherited();
if ( global.coop &amp;&amp; player == 1) {
   if ( wepright == 1) then wepright  = -1;
   if ( wepright == -1) then wepright  = 1;
} 


if ( ds_list_find_index(global.list,spr_Beaker) != -1 ) {
    draw_healthbar(x-8,y+16,x+8,y+17,enemy_kill_ctr*20,merge_color(c_black,c_dkgray,0.5),merge_color(c_gray,c_red,0.5),merge_color(c_gray,c_red,0.5),0,true,true);
}
if ( ds_list_find_index(global.list,spr_Thornmail) != -1 ) {    
    draw_sprite_ext(spr_Thorn_Part,0,x,y,1,1,0,c_white,0.5);
}
if ( ds_list_find_index(global.list,spr_Magnet) != -1 &amp;&amp; distance_to_object(obj_Coin) &lt; 128 ) {
    draw_sprite_ext(spr_Magnet_Effect,image_index,x,y,1,1,0,c_white,0.5);    
}
if ( ds_list_find_index(global.list,spr_Twin_Blade) != -1 ) {
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sprite_index,image_index,x+random_range(-4,4),y+random_range(-4,4),facing,image_yscale,image_angle,c_blue,0.6);
    draw_set_blend_mode(bm_normal);
}

var val = point_direction(x,y,mouse_x,mouse_y)+((wepang+spinang)*(1-(wkick*0.05)));   

var ldirx = lengthdir_x(abs(-wkick),val);    
var ldiry = lengthdir_y(abs(-wkick),val);
//-wkick,point_direction(x,y,mouse_x,mouse_y)+(wepang*(1-(wkick*0.05)))

if (invul = true) {
    image_alpha = 0.5;
} else if (status=="invisible") {
    image_alpha=0.3;
} else {
    image_alpha = 1;
}
var xoffset=0,yoffset = 0;
if (attack_type[char]=="MACE") {
    xoffset=4*facing;
    yoffset=4;
}

if (!should_flip) {
    wepright=abs(wepright);
}

if (brawler_spin&gt;0) {
    var points = 16;
    var angleOffset = 360/points;
    var angle;
    for (var i=0;i&lt;points;i++) {
        angle = wepang+(i*angleOffset);
        draw_sprite_ext(weapon[char],0,x+ldirx,y+ldiry+yoffset,1,wepright,angle,c_white,0.3);
    }
}

if skmode == 2 {     
    draw_sprite_ext(sprite_index,image_index,x,y,facing,image_yscale,image_angle,image_blend,image_alpha);    
    if !instance_exists(obj_Chakram) draw_sprite_ext(weapon[char],0,x-(8*facing)+ldirx,y+(8)+ldiry,1,wepright,val,c_white,1);
} else {
    draw_sprite_ext(weapon[char],0,x+ldirx,y+ldiry+yoffset,1,wepright,val,c_white,1);
    draw_sprite_ext(sprite_index,image_index,x,y,facing,image_yscale,image_angle,image_blend,image_alpha);
}

if (player = 1) {
    angle = point_direction(0, 0, gamepad_axis_value(0,gp_axisrh), gamepad_axis_value(0,gp_axisrv));
    if (angle &gt; 90 &amp;&amp; angle &lt; 270) {
        facing = -1;
    } else {
    facing = 1;
    }
}

if (global.coop &amp;&amp; player = 1) {
   wepang = angle;
}


if (wkick &gt; 0) then wkick -= 1
if (wkick &lt; 0) then wkick += 1

wepright=facing;

if (!surface_exists(shield_surface)) {
    create_shield_surface(32,DS_LBLUE);
}
if ( shield_amount &gt; 0 ) {
    draw_surface(shield_surface,x-16,y-16);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
