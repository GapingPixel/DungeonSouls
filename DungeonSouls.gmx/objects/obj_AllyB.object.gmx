<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Archer_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_Com</parentName>
  <maskName>spr_Barbarian_Mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Values
expdrop = 4
coin = 3;
maxhp = 9999
meleedamage = 0
size = 1
sight_range = 64;
damage = 3;

spr_idle = spr_Archer_Idle
spr_walk = spr_Archer_Walk
spr_hurt = spr_Archer_Hit
spr_dead = spr_Archer_Corpse

image_speed = 0.4
friction = 0.4
facing = choose(1,-1)
hp = maxhp;
team = 1
target = -1
show_hp = false;

//behavior
walk = 0
gunangle = random(360)
wepangle = choose(-140,140)
alarm[1] = 30+random(90)
wepflip = 1

if instance_exists(obj_Hero)
{
    x = obj_Hero.x
    y = obj_Hero.y    
}

//Momentary fix
spr_chrg = spr_Common_Recipe;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Target()
alarm[1] = 1+random(10);

if instance_exists(obj_Enemy)
{
    tar = instance_nearest(x,y,obj_Enemy)
    if distance_to_object(obj_Enemy) &lt; 128
    {
        //wepangle = -wepangle;
        angle=point_direction(x,y,tar.x,tar.y);
        wkick = -4
        with instance_create(x+lengthdir_x(8,angle),y+lengthdir_y(8,angle),obj_Arrow)
        {
            team = other.team;         
            speed = 8;
            damage = 3+random(3);
            direction = other.angle;
            image_angle = direction;  
            trail_col = merge_color(c_green,c_lime,0.5);                  
        }
    }
}
if target &gt; 0
{
    if collision_line(x,y,target.x,target.y,obj_Wall,0,0) &lt; 0
    {
        direction = point_direction(x,y,target.x,target.y)
        speed = 0.4
        walk = 40+random(10)        
        alarm[1] = 5+random(2)        
    }    
    else if random(5) &lt; 1
    {
        motion_add(random(360),0.4)
        walk = 10+random(15)
        alarm[1] = walk+10+random(30)
    }
}
else if random(10) &lt; 1
{
    motion_add(random(360),0.4)
    walk = 10+random(15)
    alarm[1] = walk+10+random(30)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
depth =-y;

//WKICK
if asset_get_index("wkick")!= -1
{
if wkick &gt; 0
wkick -= 1
if wkick &lt; 0
wkick += 1
}


//ANIMATE ME PLZ
if asset_get_index("spr_chrg") != -1
{
    if sprite_index != spr_hurt and sprite_index != spr_chrg
        sprite_index = spr_idle
    if sprite_index = spr_hurt or sprite_index = spr_chrg
    {
        if image_index &gt; 2
        sprite_index = spr_idle
    }
}
else
{
    if asset_get_index("spr_fire") != -1
    {
        if speed = 0
        {
            if sprite_index != spr_hurt and sprite_index != spr_fire
                sprite_index = spr_idle
        }else
        {
            if sprite_index != spr_hurt and sprite_index != spr_fire
                sprite_index = spr_walk
        }
        if sprite_index = spr_hurt or sprite_index = spr_fire
        {
            if image_index &gt; 2
            sprite_index = spr_idle
        }
    }
    else
    {
        if speed = 0
        {
            if sprite_index != spr_hurt
                sprite_index = spr_idle
        }
        else
        {
            if sprite_index != spr_hurt
                sprite_index = spr_walk
        }
            if sprite_index = spr_hurt
            {
                if image_index &gt; 2
                sprite_index = spr_idle
            }
    }
}
Target()


if walk &gt; 0 and distance_to_object(target) &gt; 16
{
    gunangle = point_direction(x,y,target.x,target.y)
    walk -= 1
    motion_add(direction,1)
}

if hspeed &gt; 0
    facing = 1
else if hspeed &lt; 0
    facing = -1
if speed &gt; 3
    speed = 3
    
image_xscale = facing;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Prop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Com">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Old Direction
var olddir = direction
var oldspeed = speed
move_bounce_solid(false)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
draw_sprite_ext(spr_Archer_Arrow,-1,x,y,1,wepflip,gunangle+wepangle,c_white,1)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
