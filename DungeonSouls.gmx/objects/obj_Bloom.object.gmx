<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bloom
depth = -room_height*5;

with obj_Hero 
{    
    var archer_offset=224,necro_offset=96,mage_offset=192;
    extra_cursor_offset=0;
//or (global.autocast and keyboard_check(ds_map_find_value(global.keys,'sskill')))
    draw_set_blend_mode(bm_add);
    draw_set_alpha(1);
    var sskill = max(gamepad_button_check(global.pad[GAMEPAD_1],ds_map_find_value(global.ckeys,'sskill')),keyboard_check(ds_map_find_value(global.keys,'sskill')) );
    var tskill = max(gamepad_button_check(global.pad[GAMEPAD_1] ,ds_map_find_value(global.ckeys,'tskill')),keyboard_check(ds_map_find_value(global.keys,'tskill')) );
    var mb = max(gamepad_button_check(global.pad[GAMEPAD_1] ,ds_map_find_value(global.ckeys,'askill')), mouse_check_button(mb_right));
   
    if global.autocast
    {            
        if ((sskill) and skill_act == 1 and alarm[1] == -1 and ability_lvl[1] &gt; 0)
        {
            if (name[char] == "BARBARIAN" or name[char] == "VIKING") and alarm[2] == -1
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }else
            if (name[char] == "ARCHER" or name[char] == "RANGER") and alarm[2] == -1
            {   
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y)-25,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y)-10,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y)+10,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y)+25,color[char],0.5);
            }else
            if name[char] == "WARRIOR" or name[char] == "KNIGHT"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,64,0);
                draw_set_alpha(1);
                draw_circle(x,y,64,1);       
            }else
            if name[char] == "THIEF" or name[char] == "ROGUE"
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);     
            }else
            if name[char] == "WIZARD" or name[char] == "ARCHMAGE"
            {
                var pos = 0;
                repeat(8)
                {
                    draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y)+pos,color[char],0.5);                
                    pos +=45;
                }
            }else
            if name[char] == "CLERIC" or name[char] == "PALADIN"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,64,0);
                draw_set_alpha(1);
                draw_circle(x,y,64,1);
                if distance_to_point(mouse_x,mouse_y)&lt;64
                    draw_sprite_ext(spr_Cleric_Gate,0,mouse_x,mouse_y,1,1,point_direction(x,y,mouse_x,mouse_y),c_white,0.4)
            }else
            if name[char] == "NECROMANCER" or name[char] == "RAVEN"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }else
            if name[char] == "NIGHTBLADE" or name[char] == "DESTROYER" and !instance_exists(obj_St_Strong_Defense)
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);     
            }
            else
            if name[char] == "BRAWLER" or name[char] == "DUELIST"
            {
                if (brawler_spin&lt;=0)
                {
                    draw_set_alpha(0.3);
                    draw_set_color(color[char]);
                    draw_circle(x,y,32,0);
                    draw_set_alpha(1);
                    extra_cursor_offset=necro_offset;
                    draw_circle(x,y,32,1);
                }
            }
            else
            if name[char] == "ENGINEER" or name[char] == "MECHANIC"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,64,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,64,1);
                if distance_to_point(mouse_x,mouse_y)&lt;64
                    draw_circle(mouse_x,mouse_y,16,true)
            }
        }
        //THIRD ATTACK
        if ((tskill) and alarm[5] == -1 and skill_act == 2 and ability_lvl[2] &gt; 0)
        {
            if name[char] == "BARBARIAN" or name[char] == "VIKING"
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5); 
            }else
            if name[char] == "ARCHER" or name[char] == "RANGER"
            {   
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,160,0);
                draw_set_alpha(1);
                extra_cursor_offset=archer_offset;
                draw_circle(x,y,160,1);
                if distance_to_point(mouse_x,mouse_y)&lt;160
                    draw_ellipse(mouse_x-64,mouse_y-32,mouse_x+64,mouse_y+32,true);
            }else
            if name[char] == "WARRIOR" or name[char] == "KNIGHT"
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);            
            }else
            if name[char] == "THIEF" or name[char] == "ROGUE"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }else
            if name[char] == "WIZARD" or name[char] == "ARCHMAGE"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,128,0);
                draw_set_alpha(1);
                extra_cursor_offset=mage_offset;
                draw_circle(x,y,128,1);
                if distance_to_point(mouse_x,mouse_y)&lt;128
                    draw_circle(mouse_x,mouse_y,16,true)
            }else
            if name[char] == "NECROMANCER" or name[char] == "RAVEN"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,96,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,96,1);
                if distance_to_point(mouse_x,mouse_y)&lt;96
                    draw_circle(mouse_x,mouse_y,16,true)
            }else
            if name[char] == "NIGHTBLADE" or name[char] == "DESTROYER"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }   
            else
            if name[char] == "BRAWLER" or name[char] == "DUELIST"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,96,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,96,1);
                if (instance_exists(obj_Enemy))
                {
                    var nearest_enemy = instance_nearest(x,y,obj_Enemy);
                    if (distance_to_object(nearest_enemy)&lt;96)
                    {
                        draw_circle(nearest_enemy.x,nearest_enemy.y,32,1);
                    }
                }
            }   
            else
            if name[char] == "ENGINEER" or name[char] == "MECHANIC"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,32,1);
                var mines = 8;
                var offsetAngle = 360/mines;
                var angle;
                var baseDir = point_direction(x,y,mouse_x,mouse_y);
                for (var i=0;i&lt;mines;i++)
                {
                    angle = degtorad(baseDir+(i*offsetAngle));
                    draw_circle(x+32*cos(angle),y-32*sin(angle),8,true);
                }
            }      
        } 
    }else
    {
        if (mb and alarm[1] == -1 and skill_act == 1 and ability_lvl[1] &gt; 0)
        {
            if (name[char] == "BARBARIAN" or name[char] == "VIKING") and alarm[2] == -1
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }else
            if (name[char] == "ARCHER" or name[char] == "RANGER") and alarm[2] == -1
            {   
                var point_dir=point_direction(x,y,mouse_x,mouse_y);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_dir-25,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_dir-10,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_dir,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_dir+10,color[char],0.5);
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_dir+25,color[char],0.5);
            }else
            if name[char] == "WARRIOR" or name[char] == "KNIGHT"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,64,0);
                draw_set_alpha(1);
                draw_circle(x,y,64,1);         
            }else
            if name[char] == "THIEF" or name[char] == "ROGUE"
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);     
            }else
            if name[char] == "WIZARD" or name[char] == "ARCHMAGE"
            {
                var pos = 0;
                repeat(8)
                {
                    draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y)+pos,color[char],0.5);                
                    pos +=45;
                }
            }else
            if name[char] == "CLERIC" or name[char] == "PALADIN"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,64,0);
                draw_set_alpha(1);
                draw_circle(x,y,64,1);
                if distance_to_point(mouse_x,mouse_y)&lt;64
                    draw_sprite_ext(spr_Cleric_Gate,0,mouse_x,mouse_y,1,1,point_direction(x,y,mouse_x,mouse_y),c_white,0.4)
            }else
            if name[char] == "NECROMANCER" or name[char] == "RAVEN"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }else
            if name[char] == "NIGHTBLADE" or name[char] == "DESTROYER" and !instance_exists(obj_St_Strong_Defense)
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);     
            }
            else
            if name[char] == "BRAWLER" or name[char] == "DUELIST"
            {
                if (brawler_spin&lt;=0)
                {
                    draw_set_alpha(0.3);
                    draw_set_color(color[char]);
                    draw_circle(x,y,32,0);
                    draw_set_alpha(1);
                    extra_cursor_offset=necro_offset;
                    draw_circle(x,y,32,1);
                }
            }
            else
            if name[char] == "ENGINEER" or name[char] == "MECHANIC"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,64,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,64,1);
                if distance_to_point(mouse_x,mouse_y)&lt;64
                    draw_circle(mouse_x,mouse_y,16,true)
            }
        }
        //THIRD ATTACK
        if (mb and alarm[5] == -1 and skill_act == 2 and ability_lvl[2] &gt; 0)
        {
            if name[char] == "BARBARIAN" or name[char] == "VIKING"
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5); 
            }else
            if name[char] == "ARCHER" or name[char] == "RANGER"
            {   
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,160,0);
                draw_set_alpha(1);
                draw_circle(x,y,160,1);
                extra_cursor_offset=archer_offset;
                if distance_to_point(mouse_x,mouse_y)&lt;160
                    draw_ellipse(mouse_x-64,mouse_y-32,mouse_x+64,mouse_y+32,true);
            }else
            if name[char] == "WARRIOR" or name[char] == "KNIGHT"
            {
                draw_sprite_ext(spr_Archer_Path_Arrow,0,x,y,1,1,point_direction(x,y,mouse_x,mouse_y),color[char],0.5);            
            }else
            if name[char] == "THIEF" or name[char] == "ROGUE"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }else
            if name[char] == "WIZARD" or name[char] == "ARCHMAGE"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,128,0);
                extra_cursor_offset=mage_offset;
                draw_set_alpha(1);
                draw_circle(x,y,128,1);
                if distance_to_point(mouse_x,mouse_y)&lt;128
                    draw_circle(mouse_x,mouse_y,16,true)
            }else
            if name[char] == "NECROMANCER" or name[char] == "RAVEN"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,96,0);
                draw_set_alpha(1);
                draw_circle(x,y,96,1);
                extra_cursor_offset=necro_offset;
                if distance_to_point(mouse_x,mouse_y)&lt;96
                    draw_circle(mouse_x,mouse_y,16,true)
            }else
            if name[char] == "NIGHTBLADE" or name[char] == "DESTROYER"
            {
                draw_set_alpha(0.2);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                draw_circle(x,y,32,1);
            }
            else
            if name[char] == "BRAWLER" or name[char] == "DUELIST"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,96,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,96,1);
                if (instance_exists(obj_Enemy))
                {
                    var nearest_enemy = instance_nearest(x,y,obj_Enemy);
                    if (distance_to_object(nearest_enemy)&lt;96)
                    {
                        draw_circle(nearest_enemy.x,nearest_enemy.y,32,1);
                    }
                }
            }
            else
            if name[char] == "ENGINEER" or name[char] == "MECHANIC"
            {
                draw_set_alpha(0.3);
                draw_set_color(color[char]);
                draw_circle(x,y,32,0);
                draw_set_alpha(1);
                extra_cursor_offset=necro_offset;
                draw_circle(x,y,32,1);
                var mines = 8;
                var offsetAngle = 360/mines;
                var angle;
                var baseDir = point_direction(x,y,mouse_x,mouse_y);
                for (var i=0;i&lt;mines;i++)
                {
                    angle = degtorad(baseDir+(i*offsetAngle));
                    draw_circle(x+32*cos(angle),y-32*sin(angle),8,true);
                }
            }
        }    
    }   
    draw_set_blend_mode(bm_normal);        
}

if room_speed &gt; room_speed-10
{
    draw_set_blend_mode(bm_add);
    with obj_Cleric_Gate draw_sprite_ext(spr_Cleric_Gate_Light,image_index,x,y,1,1,image_angle,c_white,0.1)
    with obj_Rage_Part draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_Spawn draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_Coin draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_Diamond draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_Necro_Shoot_Eff draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_Redeemer draw_sprite_ext(sprite_index,image_index,x+choose(random(0.3),-random(0.3)),y+choose(random(0.3),-random(0.3)),image_xscale*2,2,image_angle,c_red,0.1)
    with obj_Fairy draw_sprite_ext(sprite_index,image_index,x+choose(random(0.3),-random(0.3)),y+choose(random(0.3),-random(0.3)),image_xscale*2,2,image_angle,c_red,0.1)
    with obj_Boss_Explode draw_self()
    with obj_Attack if melee = false draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_SoulOrb draw_sprite_ext(sprite_index,image_index,x,y,2,2,image_angle,c_white,0.1)
    with obj_Hive draw_sprite_ext(spr_Hive_Bloom,image_index,x,y,2,2,image_angle,c_white,0.1)
}
/*with obj_Lantern
{
    draw_set_alpha(0.05)
    draw_set_color(col[0]);
    draw_circle(x,y,16+random(1),0);
    draw_set_alpha(0.08);
    draw_circle(x,y,24+random(1),0)
    draw_set_alpha(1);
}*/
draw_set_color(c_yellow);
with obj_Candle_Stand
{
    if (check_within_player_range(x,y,48,48))
    {
        draw_set_alpha(0.05)
        draw_circle(x,y-8,8+random(1),0);
        draw_set_alpha(0.08);
        draw_circle(x,y-8,12+random(1),0);
    }
}
with obj_Flame_Trap
{
    if (check_within_player_range(x,y,48,48))
    {
        draw_set_alpha(0.05)
        draw_circle(x,y-8,8+random(1),0);
        draw_set_alpha(0.08);
        draw_circle(x,y-8,12+random(1),0);
    }
}
draw_set_color(c_red);
with obj_Arrow_Trap
{
    if (check_within_player_range(x,y,48,48))
    {
        draw_set_alpha(0.05)
        draw_circle(x,y-8,8+random(1),0);
        draw_set_alpha(0.08);
        draw_circle(x,y-8,12+random(1),0);
    }
}
draw_set_color(c_lime);
with obj_Poison_Tower
{
    if (check_within_player_range(x,y,48,48))
    {
        draw_set_alpha(0.05)
        draw_circle(x,y-8,8+random(1),0);
        draw_set_alpha(0.08);
        draw_circle(x,y-8,12+random(1),0);
    }
}
draw_set_alpha(1);
draw_set_blend_mode(bm_normal);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
