<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Coin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Loot</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>loot_spr[0] = spr_Coin;
loot_col[0] = c_yellow;
loot_spr[1] = spr_Gem_A;
loot_col[1] = c_purple;
loot_spr[2] = spr_Gem_B;
loot_col[2] = c_aqua;
randomize();
if Test_Chance(90)
{
    index = 0;
    value = 1;
}
else if Test_Chance(8)
{
    index = 1;
    value = 5;
}
else 
{
    index = 2;
    value = 10;
}

sprite_index = loot_spr[index];
light_scale = .1;
light_color = loot_col[index];
light_alpha = image_alpha/4;
attract = false;
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if instance_exists(obj_Hero)
{
    var point_dir = point_direction(x,y,obj_Hero.x,obj_Hero.y);
    var point_dist= point_distance(x,y,obj_Hero.x,obj_Hero.y);
    if ds_list_find_index(global.list,spr_Magnet) != -1
    {
        if point_dist &lt; 128
        {
            if place_free(x+lengthdir_x(12,point_dir),y)
            x += lengthdir_x(6,point_dir)
            if place_free(x,y+lengthdir_y(12,point_dir))
            y += lengthdir_y(6,point_dir)
        }    
    }else
    {
        if point_dist &lt; 32
        {
            if place_free(x+lengthdir_x(12,point_dir),y)
            x += lengthdir_x(6,point_dir)
            if place_free(x,y+lengthdir_y(12,point_dir))
            y += lengthdir_y(6,point_dir)
        }
    }
}
if instance_place(x,y,obj_Wall)
{
    with obj_Hero
    {
        other.x = x;
        other.y = y;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>3,3</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
