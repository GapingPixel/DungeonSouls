<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>message_queue = ds_queue_create();
message_timer=0;
message_sprite=-1;
message_index=0;
message_description="";
pop_in_timer=0;
pop_out_timer=-1;
baseX=160;
baseY=-256;
retract_limit=-256;
increment_value=-1;
popped_out=true;
pop_flag=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_queue_destroy(message_queue);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pop_in_timer&gt;0)
{
    pop_in_timer--;
    baseY+=increment_value;
}
else if (pop_out_timer&lt;=-1)
{
    baseY=20;
}

if (!popped_out)
{
    if (pop_out_timer&gt;0)
    {
        pop_out_timer--;
        baseY-=increment_value;
    }
    else if (pop_in_timer&lt;=0 &amp;&amp; message_timer&lt;=0)
    {
        baseY=retract_limit;
        popped_out=true;
        pop_out_timer=-1;
    }
}

if (pop_in_timer&lt;=0 &amp;&amp; pop_out_timer&lt;=0)
{
    if (message_timer&gt;0)
    {
        message_timer--;
        if (message_timer&lt;=0 &amp;&amp; !popped_out)
        {
            pop_out_timer=0.25*room_speed;
            increment_value=abs(retract_limit/pop_out_timer);
        }
    }
    else
    {
        if (popped_out)
        {
            if (!ds_queue_empty(message_queue))
            {
                var list = ds_queue_dequeue(message_queue);
                message_description = ds_list_find_value(list,2);
                message_timer=ds_list_find_value(list,3)*room_speed;
                message_sprite=ds_list_find_value(list,0);
                message_index=ds_list_find_value(list,1);
                ds_list_destroy(list);
                var mh = string_height(message_description);
                var extraOffset=8;
                if (mh+extraOffset&lt;24)
                {
                    extraOffset=24;
                }
                retract_limit=-(20+mh+extraOffset);
                baseY=retract_limit;
                pop_in_timer=0.25*room_speed;
                increment_value=abs(retract_limit/pop_in_timer);
                popped_out=false;
            }
            else
            {
                //instance_deactivate_object(self);
                message_sprite=-1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (message_sprite!=-1)
{
    var mw = string_width(message_description);
    var mh = string_height(message_description);
    var extraOffset=8;
    if (mh+extraOffset&lt;24)
    {
        extraOffset=24;
    }
    draw_set_color(make_colour_rgb(32,16,32));
    draw_set_alpha(0.7);
    draw_rectangle(baseX-mw*0.5-44,-1,baseX+mw*0.5+4,baseY+mh+extraOffset,false);
    
    draw_set_alpha(1);
    draw_set_color(c_black);
    draw_rectangle(baseX-mw*0.5-44,-1,baseX+mw*0.5+4,baseY+mh+extraOffset,true);
    
    draw_sprite_stretched(message_sprite,message_index,baseX-mw*0.5-40,baseY,32,32);
    draw_set_colour(c_white);
    draw_text(baseX-mw*0.5,baseY,string(message_description));
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
