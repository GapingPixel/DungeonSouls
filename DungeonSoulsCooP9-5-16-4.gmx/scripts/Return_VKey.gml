///Return_VKey()
//returns string
if keyboard_check_pressed(ord("0")) return ord("0");
if keyboard_check_pressed(ord("1")) return ord("1");
if keyboard_check_pressed(ord("2")) return ord("2");
if keyboard_check_pressed(ord("3")) return ord("3");
if keyboard_check_pressed(ord("4")) return ord("4");
if keyboard_check_pressed(ord("5")) return ord("5");
if keyboard_check_pressed(ord("6")) return ord("6");
if keyboard_check_pressed(ord("7")) return ord("7");
if keyboard_check_pressed(ord("8")) return ord("8");
if keyboard_check_pressed(ord("9")) return ord("9");

if keyboard_check_pressed(ord("A")) return ord("A");
if keyboard_check_pressed(ord("B")) return ord("B");
if keyboard_check_pressed(ord("C")) return ord("C");
if keyboard_check_pressed(ord("D")) return ord("D");
if keyboard_check_pressed(ord("E")) return ord("E");
if keyboard_check_pressed(ord("F")) return ord("F");
if keyboard_check_pressed(ord("G")) return ord("G");
if keyboard_check_pressed(ord("H")) return ord("H");
if keyboard_check_pressed(ord("I")) return ord("I");
if keyboard_check_pressed(ord("J")) return ord("J");
if keyboard_check_pressed(ord("K")) return ord("K");
if keyboard_check_pressed(ord("L")) return ord("L");
if keyboard_check_pressed(ord("M")) return ord("M");
if keyboard_check_pressed(ord("N")) return ord("N");
if keyboard_check_pressed(ord("O")) return ord("O");
if keyboard_check_pressed(ord("P")) return ord("P");
if keyboard_check_pressed(ord("Q")) return ord("Q");
if keyboard_check_pressed(ord("R")) return ord("R");
if keyboard_check_pressed(ord("S")) return ord("S");
if keyboard_check_pressed(ord("T")) return ord("T");
if keyboard_check_pressed(ord("U")) return ord("U");
if keyboard_check_pressed(ord("V")) return ord("V");
if keyboard_check_pressed(ord("W")) return ord("W");
if keyboard_check_pressed(ord("X")) return ord("X");
if keyboard_check_pressed(ord("Y")) return ord("Y");
if keyboard_check_pressed(ord("Z")) return ord("Z");
if keyboard_check_pressed(vk_add) return vk_add
if keyboard_check_pressed(vk_alt) return vk_alt;
if keyboard_check_pressed(vk_backspace) return vk_backspace;
if keyboard_check_pressed(vk_control) return vk_control;
if keyboard_check_pressed(vk_decimal) return vk_decimal;
if keyboard_check_pressed(vk_delete) return vk_delete;
if keyboard_check_pressed(vk_divide) return vk_divide;
if keyboard_check_pressed(vk_down) return vk_down;
if keyboard_check_pressed(vk_end) return vk_end;
if keyboard_check_pressed(vk_enter) return vk_enter;
if keyboard_check_pressed(vk_escape) return vk_escape;
if keyboard_check_pressed(vk_f1) return vk_f1;
if keyboard_check_pressed(vk_f2) return vk_f2;
if keyboard_check_pressed(vk_f3) return vk_f3;
if keyboard_check_pressed(vk_f4) return vk_f4;
if keyboard_check_pressed(vk_f5) return vk_f5;
if keyboard_check_pressed(vk_f6) return vk_f6;
if keyboard_check_pressed(vk_f7) return vk_f7;
if keyboard_check_pressed(vk_f8) return vk_f8;
if keyboard_check_pressed(vk_f9) return vk_f9;
if keyboard_check_pressed(vk_f10) return vk_f10;
if keyboard_check_pressed(vk_f11) return vk_f11;
if keyboard_check_pressed(vk_f12) return vk_f12;
if keyboard_check_pressed(vk_home) return vk_home;
if keyboard_check_pressed(vk_insert) return vk_insert;
if keyboard_check_pressed(vk_lalt) return vk_lalt;
if keyboard_check_pressed(vk_lcontrol) return vk_lcontrol;
if keyboard_check_pressed(vk_left) return vk_left;
if keyboard_check_pressed(vk_lshift) return vk_lshift;
if keyboard_check_pressed(vk_multiply) return vk_multiply;
if keyboard_check_pressed(vk_numpad0) return vk_numpad0;
if keyboard_check_pressed(vk_numpad1) return vk_numpad1;
if keyboard_check_pressed(vk_numpad2) return vk_numpad2;
if keyboard_check_pressed(vk_numpad3) return vk_numpad3;
if keyboard_check_pressed(vk_numpad4) return vk_numpad4;
if keyboard_check_pressed(vk_numpad5) return vk_numpad5;
if keyboard_check_pressed(vk_numpad6) return vk_numpad6;
if keyboard_check_pressed(vk_numpad7) return vk_numpad7;
if keyboard_check_pressed(vk_numpad8) return vk_numpad8;
if keyboard_check_pressed(vk_numpad9) return vk_numpad9;
if keyboard_check_pressed(vk_pagedown) return vk_pagedown;
if keyboard_check_pressed(vk_pageup) return vk_pageup;
if keyboard_check_pressed(vk_pause) return vk_pause;
if keyboard_check_pressed(vk_printscreen) return vk_printscreen;
if keyboard_check_pressed(vk_ralt) return vk_ralt;
if keyboard_check_pressed(vk_rcontrol) return vk_rcontrol;
if keyboard_check_pressed(vk_return) return vk_return;
if keyboard_check_pressed(vk_right) return vk_right;
if keyboard_check_pressed(vk_rshift) return vk_rshift;
if keyboard_check_pressed(vk_shift) return vk_shift;
if keyboard_check_pressed(vk_space) return vk_space;
if keyboard_check_pressed(vk_subtract) return vk_subtract;
if keyboard_check_pressed(vk_tab) return vk_tab;
if keyboard_check_pressed(vk_up) return vk_up;
