///Return_VKey()
//returns string
if argument0 == (ord("0")) return ord("0");
if argument0 == (ord("1")) return ord("1");
if argument0 == (ord("2")) return ord("2");
if argument0 == (ord("3")) return ord("3");
if argument0 == (ord("4")) return ord("4");
if argument0 == (ord("5")) return ord("5");
if argument0 == (ord("6")) return ord("6");
if argument0 == (ord("7")) return ord("7");
if argument0 == (ord("8")) return ord("8");
if argument0 == (ord("9")) return ord("9");

if argument0 == (ord("A")) return ord("A");
if argument0 == (ord("B")) return ord("B");
if argument0 == (ord("C")) return ord("C");
if argument0 == (ord("D")) return ord("D");
if argument0 == (ord("E")) return ord("E");
if argument0 == (ord("F")) return ord("F");
if argument0 == (ord("G")) return ord("G");
if argument0 == (ord("H")) return ord("H");
if argument0 == (ord("I")) return ord("I");
if argument0 == (ord("J")) return ord("J");
if argument0 == (ord("K")) return ord("K");
if argument0 == (ord("L")) return ord("L");
if argument0 == (ord("M")) return ord("M");
if argument0 == (ord("N")) return ord("N");
if argument0 == (ord("O")) return ord("O");
if argument0 == (ord("P")) return ord("P");
if argument0 == (ord("Q")) return ord("Q");
if argument0 == (ord("R")) return ord("R");
if argument0 == (ord("S")) return ord("S");
if argument0 == (ord("T")) return ord("T");
if argument0 == (ord("U")) return ord("U");
if argument0 == (ord("V")) return ord("V");
if argument0 == (ord("W")) return ord("W");
if argument0 == (ord("X")) return ord("X");
if argument0 == (ord("Y")) return ord("Y");
if argument0 == (ord("Z")) return ord("Z");
if argument0 == (vk_add) return vk_add
if argument0 == (vk_alt) return vk_alt;
if argument0 == (vk_backspace) return vk_backspace;
if argument0 == (vk_control) return vk_control;
if argument0 == (vk_decimal) return vk_decimal;
if argument0 == (vk_delete) return vk_delete;
if argument0 == (vk_divide) return vk_divide;
if argument0 == (vk_down) return vk_down;
if argument0 == (vk_end) return vk_end;
if argument0 == (vk_enter) return vk_enter;
if argument0 == (vk_escape) return vk_escape;
if argument0 == (vk_f1) return vk_f1;
if argument0 == (vk_f2) return vk_f2;
if argument0 == (vk_f3) return vk_f3;
if argument0 == (vk_f4) return vk_f4;
if argument0 == (vk_f5) return vk_f5;
if argument0 == (vk_f6) return vk_f6;
if argument0 == (vk_f7) return vk_f7;
if argument0 == (vk_f8) return vk_f8;
if argument0 == (vk_f9) return vk_f9;
if argument0 == (vk_f10) return vk_f10;
if argument0 == (vk_f11) return vk_f11;
if argument0 == (vk_f12) return vk_f12;
if argument0 == (vk_home) return vk_home;
if argument0 == (vk_insert) return vk_insert;
if argument0 == (vk_lalt) return vk_lalt;
if argument0 == (vk_lcontrol) return vk_lcontrol;
if argument0 == (vk_left) return vk_left;
if argument0 == (vk_lshift) return vk_lshift;
if argument0 == (vk_multiply) return vk_multiply;
if argument0 == (vk_numpad0) return vk_numpad0;
if argument0 == (vk_numpad1) return vk_numpad1;
if argument0 == (vk_numpad2) return vk_numpad2;
if argument0 == (vk_numpad3) return vk_numpad3;
if argument0 == (vk_numpad4) return vk_numpad4;
if argument0 == (vk_numpad5) return vk_numpad5;
if argument0 == (vk_numpad6) return vk_numpad6;
if argument0 == (vk_numpad7) return vk_numpad7;
if argument0 == (vk_numpad8) return vk_numpad8;
if argument0 == (vk_numpad9) return vk_numpad9;
if argument0 == (vk_pagedown) return vk_pagedown;
if argument0 == (vk_pageup) return vk_pageup;
if argument0 == (vk_pause) return vk_pause;
if argument0 == (vk_printscreen) return vk_printscreen;
if argument0 == (vk_ralt) return vk_ralt;
if argument0 == (vk_rcontrol) return vk_rcontrol;
if argument0 == (vk_return) return vk_return;
if argument0 == (vk_right) return vk_right;
if argument0 == (vk_rshift) return vk_rshift;
if argument0 == (vk_shift) return vk_shift;
if argument0 == (vk_space) return vk_space;
if argument0 == (vk_subtract) return vk_subtract;
if argument0 == (vk_tab) return vk_tab;
if argument0 == (vk_up) return vk_up;
return -1;
