<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Lifeform
hp = maxhp;
temphp = maxhp;
activate = false;
friction = 0.4;
blink = 3;
flash = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Corpse
/*with instance_create(x,y,obj_corpse) {
     size = other.size;
     motion_add(other.direction,other.speed);
     speed += max(0,-other.hp/5);
     sprite_index = other.spr_dead;
     image_xscale = other.image_xscale;

    if (speed &gt; 16) {
       speed = 16;
       }
    if (size &gt; 0) {
    speed /= size;
    }
}

//audio_play_sound(snd_dead, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blink Flash 
switch (blink) {
       case 3:
       alarm[11] = 8;
       flash = true;
       blink--;
       break;
       case 2:
       alarm[11] = 8;
       flash = false;
       blink--;
       break;
       case 1:
       alarm[11] = 8;
       flash = true;
       blink--;
       break;
       case 0:
       flash = false;
       blink = 3;
       break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Control depth &amp; Destroy
var offset = sprite_height-sprite_yoffset;
depth = -y - offset;

if (hp &lt;= 0) {
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_lifeform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
motion_add(point_direction(other.x,other.y,x,y),0.5);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="class_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide
var olddir = direction;
var oldspeed = speed;
move_bounce_solid(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///silhouette
/*if ( global.silhouetteActive ) {
    scr_juju_silhouette_set( y, silhouetteColour );
    draw_self();
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shadows in the view &amp; draw self
draw_sprite_ext(spr_shadow,image_index,x,y+shadow_distance, image_xscale, image_yscale,image_angle, image_blend,.3);
draw_self();

/*if (x+sprite_width &gt;= view_xview -50) &amp;&amp; (x-sprite_width &lt;= view_xview+view_wview+50) &amp;&amp; (y+sprite_height &gt;= view_yview-50) &amp;&amp; (y-sprite_height &lt;= view_yview+view_hview+50) {
    draw_silhouette(sprite_index, image_index, x, y + shadow_distance, -image_xscale, image_yscale/1.25, 180, c_black, .3, 1);
}*/

/*if (x+sprite_width &gt;= view_xview -50) &amp;&amp; (x-sprite_width &lt;= view_xview+view_wview+50) &amp;&amp; (y+sprite_height &gt;= view_yview-50) &amp;&amp; (y-sprite_height &lt;= view_yview+view_hview+50) {
    var dist = (128/clamp(distance_to_object(obj_light),1,128))*0.1;
    var dist = clamp(dist,0,1);
    
    var shadow_x = x - obj_light.x;
    var shadow_y = y - obj_light.y;
    shadow_x = clamp(shadow_x,-sprite_width*.50,sprite_width*.50);
    shadow_y = clamp(shadow_y,-sprite_height*.50,sprite_height*.50);
    var tlx = x - sprite_xoffset + (x - shadow_x),   //top left x coord
    tly = y + sprite_yoffset + (y -shadow_y),   //top left y coord
    trx = x + sprite_xoffset + (x - shadow_x),   //top right x coord
    try = y + sprite_yoffset + (y - shadow_y),   //top right y coord
    blx = x - sprite_xoffset,                   //bottom right x coord
    bly = y + sprite_yoffset,                   //bottom right y coord
    brx = x + sprite_xoffset,                   //bottom left x coord
    bry = y + sprite_yoffset;                   //bottom left y coord

draw_set_color(c_white);    //necessary to show texture correctly
draw_set_alpha(dist);
draw_primitive_begin_texture(pr_trianglefan, sprite_get_texture(sprite_index, -1));
        //need to use sprite_get_texture to get sprite as well as frame

draw_vertex_texture(tlx, tly, 0, 0);    //draw top left with width and height of 0
draw_vertex_texture(trx, try, 1, 0);    //draw top right with width of 1
draw_vertex_texture(brx, bry, 1, 1);    //draw bottom right with width and height of 1
draw_vertex_texture(blx, bly, 0, 1);    //draw bottom left with height of 1

draw_primitive_end();
draw_set_alpha(1);
    
    //Pos
    /*var shadow_x = x - obj_light.x;
    var shadow_y = y - obj_light.y;
    shadow_x = clamp(shadow_x,-sprite_width*.50,sprite_width*.50);
    shadow_y = clamp(shadow_y,-sprite_height*.50,sprite_height*.50);
    d3d_set_fog(true, c_black, 0, 0);
    draw_sprite_pos(sprite_index, image_index, x - sprite_xoffset + (shadow_x), y*.97 + sprite_yoffset + (shadow_y), x + sprite_xoffset + (shadow_x), y*.97 + sprite_yoffset + (shadow_y), x + sprite_xoffset, y*.97 + sprite_yoffset, x - sprite_xoffset, y*.97 + sprite_yoffset, dist); 
    d3d_set_fog(false, c_black, 0, 0);*/
    
    /*OLD SHADOWS
    draw_silhouette(sprite_index, image_index, x,y, -image_xscale, image_yscale/1.25, point_direction(x,y,obj_light.x,obj_light.y)-180, c_black, dist, 1);
    var tex;
    tex = sprite_get_texture(sprite_index,image_index);
    var vskew = 0;
    var hskew = 0;
    draw_primitive_begin_texture(pr_trianglestrip, tex);
    draw_set_colour(c_black);
    draw_set_alpha(dist);
    draw_vertex_texture(x*.97, y*.97 + sprite_yoffset, 0, 1);
    draw_vertex_texture(x+sprite_width-hskew, y+sprite_height-vskew, 1, 1);
    draw_vertex_texture(x*.97 + sprite_xoffset, y*.97 + sprite_yoffset, 0, 0);
    draw_vertex_texture(x - sprite_xoffset + (shadow_x),y*.97 + sprite_yoffset + (shadow_y) , 1, 0);
    draw_primitive_end();
    draw_set_alpha(1);*/
//} 


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
