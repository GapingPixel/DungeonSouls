<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Chest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Prop</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.4/2
image_xscale = choose(1,-1)
depth = 14;
friction = 0.4;
team = 0
hp = hpmax;
potiondrop = 0; //PERCENTAGE
hittable = false;
shad = spr_Shadow16;
movable = true;
set_light_properties(spr_Light,0,0,.2,.2,0,c_white,image_alpha/4);
smoke_timer=0;
solid = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,obj_Corpse)
{
    sprite_index = other.spr_dead;
}

repeat(floor(random(debris)+random(debris)))
{
    with instance_create(x,y,obj_Debris)
    {
        sprite_index = spr_Wood_Pieces;
        speed = 3+random(3)/2;
        direction = random(360);
        friction = 0.2;
    }
}


//SMOKE
randomize();
//Smoke(2,1,360,depth,0.1, merge_color(c_yellow,c_gray,random_range(0.7,1)),random(5))
scr_part_smoke(2,360,random(4),.9,depth,random(5),merge_color(c_yellow,c_gray,random_range(0.7,1)),random(360),1);

if global.boss_rm != 3
{
    if ds_list_find_index(global.list,spr_Gold_Necklace) != -1 coin += 2;
    repeat(coin)
    {
        with instance_create(x,y,obj_Coin)
        {
            speed = 2+random(2)/2;
            direction = random(360);
            friction = 0.2;
            value = 1;
        }
    }
    //POTION
    if (chest_name != "CURSED CHEST")
    {
        if (random(potiondrop)) &lt; 1
        {
            with instance_create(x,y,Random_Potion())
            {
            item_price = 0;
            speed = 3/2;
            direction = random(360);
            friction = 0.2;
            }
        }
    }
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = .2;
depth = -y;
if sprite_index != spr_hurt
    sprite_index = spr_idle
if sprite_index = spr_hurt
{
    if image_index &gt; 2
        sprite_index = spr_idle
}


if instance_exists(obj_Hero)
{
    if collision_circle(x,y,16,obj_Hero,false,true) &gt; 0
    {
    
        var picked;
        var pad;
        pad = global.pad[GAMEPAD_1];
        picked = max ( gamepad_button_check_pressed(pad,ds_map_find_value(global.ckeys,'pick')) , keyboard_check_pressed(ds_map_find_value(global.keys,'pick')) )  ;
    
        if chest_price &lt;=0 &amp;&amp; picked {
            if chest_name == "SILVER CHEST"
            {
                if obj_Hero.silver_key &gt; 0
                {
                    obj_Hero.silver_key -= 1
                    instance_destroy();
                    instance_create(x,y,obj_Item_Get)
                }
            }else
            if chest_name == "GOLDEN CHEST"
            {
                if obj_Hero.golden_key &gt; 0
                {
                    obj_Hero.golden_key -= 1
                    instance_destroy();
                    instance_create(x,y,obj_Item_Get)
                }
            }else                      
            {
                instance_destroy();
                instance_create(x,y,obj_Item_Get)            
            }
        }
        else if chest_price &gt; 0 &amp;&amp; obj_Hero.coin &gt;= chest_price &amp;&amp; picked
        {
            Play_Sound(snd_cash_register,1,0.8,0,5000,true,false)
            instance_destroy();
            obj_Hero.coin -= chest_price;
            instance_create(x,y,obj_Item_Get)
        }
    }    
}
if (chest_name == "CURSED CHEST")
{
    if (smoke_timer==0)
    {
        var extra_depth=irandom_range(-1,1),s_alpha=1;
        if (extra_depth==-1)
        {
            s_alpha=0.3;
        }
        //Smoke_Alpha(2,1,360,depth+extra_depth,.2,c_purple,4,s_alpha);
        scr_part_smoke(2,360,random(5),.8,depth+extra_depth,4,c_purple,random(360),s_alpha);//Smoke Alpha replacement
        smoke_timer=room_speed;   
    }
    else
    {
        smoke_timer--;
        if (smoke_timer&lt;0)
        {
            smoke_timer=0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
