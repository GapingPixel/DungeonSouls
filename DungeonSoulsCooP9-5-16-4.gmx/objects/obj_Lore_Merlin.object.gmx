<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Merlin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_Hero)
{
    if (!fought_normal_merlin)
    {
        with instance_create(x,y,obj_Merlin_Hat) item_price = 0;
    }
}
image_speed=0.5;
change_merlin=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!killed_owl)
{
    instance_create(x,y,obj_Beam);
    
    var item_spawn;
    if (owl_nice_value&lt;5)
    {
        switch (global.choice)
        {
            case 0:
                item_spawn = obj_Book_of_BR;
            break;
            case 1:
                item_spawn = obj_Book_of_AR;
            break;
            case 2:
                item_spawn = obj_Book_of_TH;
            break;
            case 3:
                item_spawn = obj_Book_of_WR;
            break;
            case 4:
                item_spawn = obj_Book_of_CD;
            break;
            case 5:
                item_spawn = obj_Book_of_HL;
            break;
            case 6:
                item_spawn = obj_Book_of_CD;
            break;
            case 7:
                item_spawn = obj_Book_of_BR;
            break;
            case 8:
                item_spawn = obj_Book_of_WR;
            break;
            case 9:
                item_spawn = obj_Book_of_CD;
            break;
        }
    }
    else
    {
        Item_Init();
        item_spawn = Drop_Uncommon();
    }
    if (owl_nice_value&gt;=5)
    {
        var radius=64;
        var points = 8;
        var offsetAngle = 360/points;
        var angle;
        for (var i=0;i&lt;points;i++)
        {
            angle = i*offsetAngle;
            ob = instance_create(x+radius*cos(angle),y-radius*sin(angle),obj_Exp);
            ob.value=ceil(500*random_range(0.75,1.25)*global.level/points);
            ob = instance_create(x+radius*cos(angle),y-radius*sin(angle),obj_Coin);
            ob.value=ceil(1000*random_range(0.75,1.25)*global.level/points);
        }
    }
    
    with instance_create(x,y,item_spawn)
    {
        item_price = 0;
        speed = 0;
        direction = random(360);
        friction = 0.2;
    }
    
    with (obj_Lore_Block_Door)
    {
        instance_destroy();
    }
}
else
{
    instance_create(x,y,obj_Dark_Merlin);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!is_cinematic_displayed())
{
    if (killed_owl)
    {
        if (!change_merlin &amp;&amp; sprite_index!=spr_Dark_Merlin_Transformation)
        {
            sprite_index=spr_Dark_Merlin_Transformation;
        }
    }
    else
    {
        instance_destroy();
    }
}
if (change_merlin)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!change_merlin &amp;&amp; sprite_index==spr_Dark_Merlin_Transformation)
{
    change_merlin=true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
