<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -room_height*5
light = surface_create(960,960)//surface_create(view_wview+128,view_hview+128);
brightness = 0;
//sprite_set_alpha_from_sprite(spr_LightB,spr_Light);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(light);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(light);
//draw_clear(merge_color(c_black,c_dkgray,0.9));
draw_clear(c_black)
var sc = 0//random(0.1);
draw_set_blend_mode(bm_add);

if global.glow
{
    with(obj_LightB){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs+sc , ys+sc , rs , cs , as );}
    with(obj_Fairy){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}    
    with(obj_Attack){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
    with(obj_Chest){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}    
    //with(obj_Small_Flame){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}    
    with(obj_Thorn){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
    //with(obj_Prop){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
    with(obj_Rain_Arrow_Spot){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
    with(obj_Poison_Position){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
    with(obj_Necro_Shoot){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}    
}
with(obj_Item){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Poison_Gun){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Arrow_Trap){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Poison_Tower){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Hive){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Door){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Boss_Corpse){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Hero){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs+sc , ys+sc , rs , cs , as );}
with(obj_Mark){if act == true draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Boss_Chest){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Soul_Orb){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
with(obj_Redeemer){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}
//with(obj_PWizard_LifeSteal){draw_sprite_ext( ls , 0 , x - view_xview + xo , y - view_yview + yo , xs , ys , rs , cs , as );}


val = 0.4
if room == Menu
{
    draw_sprite_ext(spr_Light,0,320/2,64,1.5,1.5,0,merge_colour(c_aqua,c_aqua,0.2),.5);
    draw_sprite_ext(spr_Light,0,320/2,128,1,1,0,merge_colour(c_orange,c_yellow,0.5),.5);
    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_purple,val/10);
    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_blue,val/10);
    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,.2-val/10);
}else
if room == Char_Select
{
    //draw_sprite_ext(spr_Light,0,320/2,240/2,1,1,0,merge_colour(c_orange,c_yellow,0.5),1);
    if global.difficulty == EASY
    {
        draw_sprite_ext(spr_Light,0,320/2,240/2,.4,.4,0,c_gray,val);
        draw_sprite_ext(spr_Light,0,320/2,240/2,.5,.5,0,c_aqua,val);
    }else
    if global.difficulty == NORMAL
    {
        draw_sprite_ext(spr_Light,0,320/2,240/2,.4,.4,0,c_aqua,val);
        draw_sprite_ext(spr_Light,0,320/2,240/2,.5,.5,0,c_blue,val);    
    }else
    if global.difficulty == HARD
    {
        draw_sprite_ext(spr_Light,0,320/2,240/2,.4,.4,0,c_orange,val);
        draw_sprite_ext(spr_Light,0,320/2,240/2,.5,.5,0,c_red,val);    
    }else
    if global.difficulty == IMPOSSIBLE
    {
        draw_sprite_ext(spr_Light,0,320/2,240/2,.4,.4,0,c_purple,val);
        draw_sprite_ext(spr_Light,0,320/2,240/2,.5,.5,0,DS_PURPLE,val);    
    }    
    draw_sprite_ext(spr_Light,0,320/2,240/2,.2,.2,0,c_white,.2-val);
}else
{
    if !instance_exists(obj_Redeemer)
    {
        switch(global.dungeon_name)
        {
            case ENVIRO1:
                if global.DARK == 0
                {
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_purple,val);
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                }else
                {
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_purple,0);
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0);            
                }
                break;
            case ENVIRO2:
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_lime,val/20);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_blue,val/20);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                break;   
            case ENVIRO3:
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_gray,val);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                break; 
            case ENVIRO4:
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white+c_purple,val/4);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_purple,val/4);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                break;
            case SECRET1:
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_yellow,val/20);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_orange,val/20);
                draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                break;            
            case SECRET2:
                if global.dungeon_type == 0
                {
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_lime,val/20);
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_green,val/20);
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                }else
                {
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_gray,val);
                    draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);
                }                   
                break;              
            default:
                break;
        }
    }else
    {
            draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_red,val/20);
            draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_orange,val/20);
            draw_sprite_ext(spr_ScreenLight,0,0,0,1,1,0,c_white,0.2-val);    
    }
}

draw_set_blend_mode(bm_normal);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(light);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(light);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.light
{
    if surface_exists(light)
    {
            draw_set_blend_mode_ext(bm_dest_color,bm_src_color);
            draw_surface(light,view_xview,view_yview);
            draw_set_blend_mode( bm_normal );
    }else
    {
        light = surface_create(960,960)//surface_create(view_wview+128,view_hview+128);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
