<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Hit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>set_light_properties(spr_Light,0,0,.4,.4,0,merge_colour(c_aqua,c_white,0.5),image_alpha/3);
mapvis = false;
knockback = 0;
knockback_dir = 0;
speedup = false;
elite = false

image_speed = 0.4/2
friction = 0.4
facing = choose(1,-1)
team = 1
target = -1
show_hp = false;
slow_effect=0;
norm_blend = image_blend;
shad = spr_Shadow16;
uses_shield=false;

//Momentary fix
spr_chrg = spr_Common_Recipe;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Play_Sound(sound_dead,random_range(0.8,1),0.7,0,7000,true,false);

repeat(Random(1,4))
{
    with instance_create(x+choose(-random(8),random(8)),y+choose(-random(8),random(8)),obj_Blood_Stain)
    {
        image_xscale = other.image_xscale;
        friction = other.friction;
    }
}

with instance_create(x,y,obj_Corpse)
{
    sprite_index = other.spr_dead;
    image_xscale = other.image_xscale;
    friction = other.friction;
    image_blend = other.image_blend+c_gray;
}

if global.boss_rm != 3
{
    repeat(coin)
    {
        with instance_create(x,y,obj_Coin)
        {
            speed = 2+random(2)/2;
            direction = random(360);
            friction = 0.2;
            value = global.dungeon+1;
        }
    }
    with obj_Hero
    {
        //drop items
        if random(100) &lt; 10
        {
            if random(hpmax[char]) &gt; hp and random(3) &lt; 2
                with other
                {
                    obj = instance_create(x,y,obj_Potion);
                    obj.item_price = 0;
                }
        }
    }
}
with obj_Hero
{
    if ds_list_find_index(global.list,spr_Beaker) != -1
    {
        enemy_kill_ctr += 1;
        if enemy_kill_ctr &gt; 5
        {
            if hp &lt; hpmax[char]
                hp += (10/100)*hpmax[char];
            Popup("+",c_lime);
            enemy_kill_ctr = 0;
        }
    }
}
//SOUL
if ds_list_find_index(global.list,spr_Soul_Jar) != -1
{
    if choose(0,1)
        instance_create(x,y,obj_Enemy_Soul);
}


if elite
{
    instance_create(x,y,obj_Wood_Chest)
}
//SCATTER SHOT
if ds_list_find_index(global.list,spr_Slingshot) != -1
{
    var pos = 0;
    repeat(8)
    {            
        with obj_Hero
            Create_Projectile(other.x+lengthdir_x(16,pos),other.y+lengthdir_y(16,pos),obj_Scattered_BShot,team,2,crit_chance,0,0,mag_dam[char],mag_bon[char],knockback,pos,99,1,false);
        pos += 45;
    }
}



//SMOKE
/*repeat(3)
{
    obj = instance_create(x,y,obj_Smoke);
    obj.speed = 1+random(1);
    obj.direction = random(360);
    obj.vspeed = -1+random(-1);
    obj.depth = other.depth;
    obj.friction = 0.1;
    obj.col = merge_color(c_aqua,c_gray,random_range(0.6,0.9));
    obj.rad = random(5);    
}*/

//SMALL FLASH
if random(3)&lt;1
    instance_create(x,y,obj_Small_Flash)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hp&lt;1
{
    instance_destroy();
}

/*if distance_to_object(obj_Merchant) &lt; 96
{
    motion_add(point_direction(obj_Merchant.x,obj_Merchant.y,x,y),speed);
}*/


friction = 0.4;
image_blend = norm_blend
    
if speedup
{
    if speed &gt; maxspeed+2
        speed = maxspeed+2;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_place(x,y-8,obj_Wall)
    depth = -y*3
else
    depth =-y;

//WKICK
if asset_get_index("wkick")!= -1
{
if wkick &gt; 0
wkick -= 1
if wkick &lt; 0
wkick += 1
}


//ANIMATE ME PLZ
if asset_get_index("spr_chrg") != -1
{
    if sprite_index != spr_hurt and sprite_index != spr_chrg
        sprite_index = spr_idle
    if sprite_index = spr_hurt or sprite_index = spr_chrg
    {
        if image_index &gt; 2
        sprite_index = spr_idle
    }
}
else
{
    if asset_get_index("spr_fire") != -1
    {
        if speed = 0
        {
            if sprite_index != spr_hurt and sprite_index != spr_fire
                sprite_index = spr_idle
        }else
        {
            if sprite_index != spr_hurt and sprite_index != spr_fire
                sprite_index = spr_walk
        }
        if sprite_index = spr_hurt or sprite_index = spr_fire
        {
            if image_index &gt; 2
            sprite_index = spr_idle
        }
    }
    else
    {
        if speed = 0
        {
            if sprite_index != spr_hurt
                sprite_index = spr_idle
        }
        else
        {
            if sprite_index != spr_hurt
                sprite_index = spr_walk
        }
            if sprite_index = spr_hurt
            {
                if image_index &gt; 2
                sprite_index = spr_idle
            }
    }
}
Target()




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Trap">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Loot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other
    motion_add(point_direction(other.x,other.y,x,y),0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
with other
    if size &lt; 3 motion_add(point_direction(other.x,other.y,x,y),0.5/size)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Prop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
with other
    if size &lt; 3 motion_add(point_direction(other.x,other.y,x,y),0.5/size)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.team != team and meleedamage &gt; 0 
{
    with other
    {        
        if sprite_index != spr_hurt[char] and visible = true
        {   
            var tot_dam = ceil(other.meleedamage/((defense[char]+def_bon[char])));
            if tot_dam &gt; 0
            {
                scr_part_smoke(8,90,random(4),1+random(1),depth,1,c_red,random(360),1); //Blood Format
                hp -= tot_dam
                sprite_index = spr_hurt[char]
                image_index = 0
                motion_add(other.direction,4)
                with instance_create(x,y,obj_Hit_Effect) {depth=other.depth-1;}
                Popup("-"+string(tot_dam),c_red);
            }
        }
        if hp &lt;= 0
        {
            global.killer = other.id;
        }        
    }    
}
if other.team != team
{
    if other.meleedamage &gt; 0
    {
        if sprite_index != spr_hurt
        {   
            hp -= other.meleedamage
            global.shake += 2;
            sprite_index = spr_hurt
            image_index = 0
            //KNOCKBACK
            if ds_list_find_index(global.list,spr_Pacman_Glove) == -1
                motion_add(other.direction,8+other.knockback);
            else
                motion_add(other.direction,4)
            with instance_create(x,y,obj_Hit_Effect) {depth=other.depth-1;}
            Popup("-"+string(other.meleedamage),c_white);
        }    
    }
    if other.dash &gt; 0
    {
        knockback = 8;
        motion_add(other.direction,4)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Ally">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),other.size*1.5)
with other
    if size &lt; 3 motion_add(point_direction(other.x,other.y,x,y),0.5/size)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(false)
/*var olddir oldspeed;
olddir = direction
oldspeed = speed
move_bounce_solid(true)

motion_add(olddir,speed)
speed = oldspeed

if hspeed &gt; 0 and !place_free(x+hspeed,y)
{do hspeed -= friction until place_free(x+hspeed,y) or hspeed &lt;= 0}
else
if hspeed &lt; 0 and !place_free(x+hspeed,y)
{do hspeed += friction until place_free(x+hspeed,y) or hspeed &gt;= 0}

if vspeed &gt; 0 and !place_free(x,y+vspeed)
{do vspeed -= friction until place_free(x,y+vspeed) or vspeed &lt;= 0}
else
if vspeed &lt; 0 and !place_free(x,y+vspeed)
{do vspeed += friction until place_free(x,y+vspeed) or vspeed &gt;= 0}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if other.team != team and other.damage &gt; 0 and visible == true
    {
        if sprite_index != spr_hurt
        {
            Item_Effect();           
            Play_Sound(snd_hit,random_range(0.7,0.8),0.3,0,5000,true,false);        
            //KNOCK BACK
            knockback_dir = point_direction(other.x,other.y,x,y)
            knockback = other.knockback
            walk = 0;
            if ds_list_find_index(global.list,spr_Unicorn_Horn) != -1 and (random(100-30)&lt;1)
            {
                hp -= 999
                global.shake += 2;
                sprite_index = spr_hurt
                image_index = 0
                with instance_create(x,y,obj_Hit_Effect) {depth=other.depth-1;}
                Popup("-"+string(999),c_white);
            }else
            {
                if ds_list_find_index(global.list,spr_Twin_Blade) != -1 and (random(100-30)&lt;1)
                    var true_damage = other.damage*2;
                else
                    var true_damage = other.damage;               
                if instance_exists(obj_St_Berserk)
                {
                    if obj_St_Berserk.owner.team == other.team
                        true_damage *= 2;
                }
                hp -= true_damage;
                global.shake += 2;
                sprite_index = spr_hurt
                image_index = 0
                //STEAL COIN
                if ds_list_find_index(global.list,spr_Gold_Hand) != -1
                {
                    with instance_create(x+lengthdir_x(16,direction),y+lengthdir_y(16,direction),obj_Coin)
                    {
                        speed = 2+random(2);
                        direction = other.direction;
                        friction = 0.2;
                    }
                    coin -= 1;
                }
                with instance_create(x,y,obj_Hit_Effect) {depth=other.depth-1;}
                //CRITICAL HIT
                if other.critical
                {
                    instance_create(x,y,obj_White_Flash)
                    Popup("-"+string(floor(true_damage))+" Critical!",c_yellow);
                    Critical_Effect();
                }           
                else
                    Popup("-"+string(floor(true_damage)),c_white); //POPUP
                //SCRATCH
                if ds_list_find_index(global.list,spr_Bear_Claw) != -1
                    if random(100-50) &lt; 1
                        if other.sprite_index != spr_Scratch
                            with obj_Hero
                                Create_Projectile(other.x,other.y,obj_Scratch,team,0,crit_chance,0,0,(50+((Item_Value(spr_Bear_Claw)+1)*5))*mag_dam[char],0,knockback,angle,accuracy[char],acc_bon[char],false);
            }
            with other
                if type == 0 or type == 1
                    instance_destroy(); 
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if elite
    draw_healthbar(x-clamp((maxhp/100)*10,3,10), y-sprite_get_height(sprite_index)/2, x+clamp((maxhp/100)*10,3,10), y-sprite_get_height(sprite_index)/2+2, (hp/maxhp)*100, make_color_rgb(31,29,31), c_red, c_blue, 0, true, true)
else
    draw_healthbar(x-clamp((maxhp/100)*10,3,10), y-sprite_get_height(sprite_index)/2, x+clamp((maxhp/100)*10,3,10), y-sprite_get_height(sprite_index)/2+2, (hp/maxhp)*100, make_color_rgb(31,29,31), c_red, c_lime, 0, true, true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
