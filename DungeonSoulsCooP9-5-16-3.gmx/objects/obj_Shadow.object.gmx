<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Shadow
depth = 95;

with (obj_Hero) {
    draw_set_blend_mode(bm_add)
    draw_set_alpha(1);
    //draw_set_color(color[char]);
    //draw_ellipse(x-8,y+8,x+8,y+18,true)
    //AURA
    if (status == "rage") {
        draw_sprite_ext(spr_Rage_Aura,0,x,y+8,1,1,buff_angle,c_red,0.8);
    }    
    if ( stat_pnt &gt; 0 ) {
        draw_sprite_ext(spr_Ray,0,x,y,1,1,buff_angle,image_blend,0.3);
        draw_sprite_ext(spr_Ray,0,x,y,1,1,(buff_angle)+45,image_blend,0.3);    
    }
    draw_set_blend_mode(bm_normal);
    
    Aura();  
    
    with obj_Black_Knight {
        draw_sprite_ext(spr_Rage_Aura,0,x,y+8,1,1,other.buff_angle,c_white,0.8); 
    }
    with obj_Ice_Golem {
        draw_sprite_ext(spr_Rage_Aura,0,x,y+24,1,1,other.buff_angle,c_aqua,0.8); 
    }
    draw_set_blend_mode(bm_add);        
    with obj_Fire_Burst_Spot {
        draw_sprite_ext(spr_Fire_Burst_Spot,0,x,y,1,1,direction,merge_color(c_yellow,c_orange,0.5),0.4+(sin(other.buff_angle*0.1)*0.4));
    } 
    with ( obj_Fire_Burst_Spot_Enemy ) {
        draw_sprite_ext(spr_Fire_Burst_Spot,0,x,y,1,1,direction,c_red,0.4+(sin(other.buff_angle*0.1)*0.4));
    }
    with ( obj_Ice_Block_Spot ) {
        draw_sprite_ext(spr_Fire_Burst_Spot,0,x,y,1,1,direction,c_aqua,0.4+(sin(other.buff_angle*0.1)*0.4));
    } 
    draw_set_blend_mode(bm_normal);          
}
with ( obj_Item ) {
    draw_sprite_ext(spr_Shadow16,image_index,x,y+4,1,1,image_angle,c_black,Check_Alpha());
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_Ray,0,x,y,1,1,n*10,image_blend,0.3)
    draw_sprite_ext(spr_Ray,0,x,y,1,1,(n*10)+45,image_blend,0.3)    
    draw_set_blend_mode(bm_normal); 
}
/*draw_set_blend_mode(bm_add);
with obj_Blood_Stain draw_sprite_ext(sprite_index,image_index,x,y,1,1,image_angle,image_blend,0.3);
draw_set_blend_mode(bm_normal);*/

with obj_St_Burned draw_sprite_ext(sprite_index,image_index,x,y,1,1,image_angle,image_blend,1);
//with obj_Door draw_sprite_ext(sprite_index,image_index,x,y+4,1,-1,image_angle,c_black,0.4);
//with obj_Attack draw_sprite_ext(sprite_index,image_index,x,y+8,1,image_yscale,image_angle,c_black,Check_Alpha());
with obj_Prop draw_sprite_ext(shad,image_index,x,y,1,1,image_angle,c_black,Check_Alpha());
with obj_Trap draw_sprite_ext(sprite_index,image_index,x,y+10,1,-1,image_angle,c_black,Check_Alpha());
with obj_Hero draw_sprite_ext(spr_Shadow16,image_index,x,y+4,facing,1,image_angle,c_black,Check_Alpha());

with ( obj_Enemy ) {
    if (check_within_player_range(x,y,48,48)) {
        if ( name == "JUDGEMENT" ) {
            draw_sprite_ext(spr_Judgement_Shadow,image_index,x,y+4,facing,1,image_angle,c_black,Check_Alpha());  
        } else
            draw_sprite_ext(shad,image_index,x,y+4,facing,1,image_angle,c_black,Check_Alpha());
    }
}
with obj_Ally
{
    draw_set_blend_mode(bm_add);
    draw_sprite_ext(spr_AuraB,2,x,y+8,1,1,0,c_aqua,0.8)
    draw_set_blend_mode(bm_normal);    
    draw_sprite_ext(shad,image_index,x,y+4,facing,1,image_angle,c_black,Check_Alpha());
}
with obj_Wall 
{
    if (check_within_player_range(x,y,48,48))
    {
        if tile_layer_find(100,x,y+32) 
        {
            draw_sprite_ext(sprite_index,image_index,x,y+14,1,1,image_angle,c_black,0.4);
            draw_sprite(global.wall,image_index,x,y+8);        
            if ( global.dungeon_name == ENVIRO4  )
            {
                draw_set_blend_mode(bm_add);
                if image_index == 1 draw_sprite_ext(spr_Cathedral_Window_Light,0,x,y+32,1,1,image_angle,c_white,0.4);
                if image_index == 2 draw_sprite_ext(spr_Cathedral_Window_Light,1,x,y+32,1,1,image_angle,c_white,0.4);
                draw_set_blend_mode(bm_normal);        
            }
        }
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
